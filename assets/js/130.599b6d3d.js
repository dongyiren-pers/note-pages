(window.webpackJsonp=window.webpackJsonp||[]).push([[130],{1031:function(t,e,r){"use strict";r.r(e);var a=r(14),o=Object(a.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"架构设计"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#架构设计"}},[t._v("#")]),t._v(" 架构设计")]),t._v(" "),r("h2",{attrs:{id:"zookeeper"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#zookeeper"}},[t._v("#")]),t._v(" Zookeeper")]),t._v(" "),r("h3",{attrs:{id:"zookeeper-和-nacos-的区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#zookeeper-和-nacos-的区别"}},[t._v("#")]),t._v(" Zookeeper 和 Nacos 的区别")]),t._v(" "),r("div",{staticClass:"tag-group"},[r("el-tag",{attrs:{type:"primary",effect:"plain",size:"medium"}},[t._v("饿了么")])],1),r("style",[t._v("\n                        .table-column-x-x-container-wdo6fzjg table th:nth-of-type(1) {\n                            width: 20%;\n                            word-wrap: break-word;\n                        }\n                    \n                        .table-column-x-x-container-wdo6fzjg table th:nth-of-type(2) {\n                            width: 40%;\n                            word-wrap: break-word;\n                        }\n                    \n                        .table-column-x-x-container-wdo6fzjg table th:nth-of-type(3) {\n                            width: 40%;\n                            word-wrap: break-word;\n                        }\n                    ")]),r("div",{staticClass:"table-column-x-x-container-wdo6fzjg"},[r("table",[r("thead",[r("tr",[r("th"),t._v(" "),r("th",[t._v("Zookeeper")]),t._v(" "),r("th",[t._v("Nacos")])])]),t._v(" "),r("tbody",[r("tr",[r("td",[t._v("生态系统")]),t._v(" "),r("td",[t._v("Apache 的顶级项目")]),t._v(" "),r("td",[t._v("阿里巴巴开源项目")])]),t._v(" "),r("tr",[r("td",[t._v("功能特性")]),t._v(" "),r("td",[t._v("分布式协调和服务发现")]),t._v(" "),r("td",[t._v("支持服务发现、动态配置、流量管理、服务治理、分布式事务等")])]),t._v(" "),r("tr",[r("td",[t._v("分布式特性")]),t._v(" "),r("td",[t._v("CP")]),t._v(" "),r("td",[t._v("CP+AP")])]),t._v(" "),r("tr",[r("td",[t._v("一致性算法")]),t._v(" "),r("td",[r("RouterLink",{attrs:{to:"/distributed-system/xjl3k1/#_2-3-zab-算法"}},[r("strong",[t._v("ZAB 算法")])])],1),t._v(" "),r("td",[r("RouterLink",{attrs:{to:"/distributed-system/xjl3k1/#_2-2-raft-算法"}},[r("strong",[t._v("Raft 算法")])])],1)]),t._v(" "),r("tr",[r("td",[t._v("存储方式")]),t._v(" "),r("td",[t._v("内存数据库")]),t._v(" "),r("td",[t._v("MySQL 或者 TiDB")])])])])]),r("h3",{attrs:{id:"zookeeper-的节点类型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#zookeeper-的节点类型"}},[t._v("#")]),t._v(" Zookeeper 的节点类型")]),t._v(" "),r("div",{staticClass:"tag-group"},[r("el-tag",{attrs:{type:"primary",effect:"plain",size:"medium"}},[t._v("腾讯")])],1),r("p",[r("strong",[t._v("持久节点")]),t._v("：是一种在 ZooKeeper 中创建后将一直存在的节点。即使客户端与 ZooKeeper 断开连接，持久节点也不会被删除。持久节点通常用于存储配置信息和静态数据。")]),t._v(" "),r("p",[r("strong",[t._v("临时节点")]),t._v("：是一种只在与创建它们的客户端会话保持连接的情况下存在的节点。一旦创建这些节点的客户端会话终止，临时节点将被自动删除。临时节点通常用于表示临时状态或者是临时的工作单元。")]),t._v(" "),r("p",[r("strong",[t._v("顺序节点")]),t._v("：可以与上述节点类型结合使用，它在节点的名称后面附加一个递增的数字。当多个客户端创建相同父节点下的顺序节点时，节点名称会按顺序排列。顺序节点可以帮助实现有序的分布式操作。")])])}),[],!1,null,null,null);e.default=o.exports}}]);