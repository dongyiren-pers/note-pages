(window.webpackJsonp=window.webpackJsonp||[]).push([[150],{1070:function(t,a,s){"use strict";s.r(a);var e=s(14),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"第1章-mysql基础"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第1章-mysql基础"}},[t._v("#")]),t._v(" 第1章 MySQL基础")]),t._v(" "),s("h2",{attrs:{id:"_1-1-存储引擎"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-存储引擎"}},[t._v("#")]),t._v(" 1.1 存储引擎")]),t._v(" "),s("p",[t._v("MySQL 中的数据通过不同的技术存储在文件（或内存）中，每种技术使用不同的存储机制、索引技巧、锁定级别等不同的功能和能力，这些不同的技术以及配套的相关功能被称为 "),s("strong",[t._v("存储引擎")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"常见的存储引擎"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常见的存储引擎"}},[t._v("#")]),t._v(" 常见的存储引擎")]),t._v(" "),s("p",[s("strong",[t._v("InnoDB")]),t._v("：InnoDB 是 MySQL 的默认存储引擎，也是最常用的存储引擎之一。它 "),s("strong",[t._v("支持事务处理、行级锁定和外键约束")]),t._v(" 等高级功能。InnoDB 提供了较好的并发性能和数据完整性，适用于大多数应用场景。")]),t._v(" "),s("p",[s("strong",[t._v("MyISAM")]),t._v("：MyISAM 是 MySQL 早期版本中的一种常用存储引擎。它对于读密集型应用具有较好的性能，但 "),s("strong",[t._v("不支持事务处理、行级锁和外键约束")]),t._v("。MyISAM 适用于只读或很少更新的应用，例如博客等。")]),t._v(" "),s("p",[s("strong",[t._v("MEMORY")]),t._v(" ：该存储引擎将数据存储在内存中，因此读写速度非常快。它适用于临时表、缓存数据或其他需要快速访问的数据。然而，由于数据存储在内存中，一旦数据库重启，数据将丢失。")]),t._v(" "),s("p",[s("strong",[t._v("MRG_MYISAM")]),t._v("：这是一个合并（Merge）存储引擎，可以将多个MyISAM表合并为一个逻辑表。它在逻辑上将多个表连接在一起，可以方便地对它们进行查询。但是，它只能处理MyISAM表，并且不支持事务处理。")]),t._v(" "),s("p",[s("strong",[t._v("CSV")]),t._v("：CSV 存储引擎将数据存储在逗号分隔值（CSV）格式的文件中。它适用于快速导入/导出数据，并且可以与许多应用程序方便地进行集成。然而，它对数据类型支持有限，并且不支持索引。")]),t._v(" "),s("p",[s("strong",[t._v("Federated")]),t._v("：Federated 存储引擎允许在一个 MySQL 服务器上查询另一个 MySQL 服务器上的表。它实现了分布式查询，可以在不同服务器之间共享数据。这对于分布式环境或需要访问多个数据库的应用程序非常有用。")]),t._v(" "),s("p",[s("strong",[t._v("Performance_Schema")]),t._v("：Performance_Schema 存储引擎用于收集和报告 MySQL 服务器的性能统计信息。它提供了丰富的性能指标和事件信息，用于分析和优化查询性能、锁定等待和资源利用。")]),t._v(" "),s("p",[s("strong",[t._v("Blackhole")]),t._v("：Blackhole 存储引擎接收写入操作，但不会将数据存储在磁盘上。它用于进行数据复制，将写入操作传递到其他服务器进行处理。这对于复制和日志记录等场景很有用。")]),t._v(" "),s("p",[s("strong",[t._v("Archive")]),t._v("：Archive存储引擎用于存储归档数据，并提供了高度的数据压缩。它适用于只读的历史数据和日志等场景。Archive引擎支持追加插入和全表扫描，但不支持更新和删除操作。")]),t._v(" "),s("h3",{attrs:{id:"关于存储引擎的操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关于存储引擎的操作"}},[t._v("#")]),t._v(" 关于存储引擎的操作")]),t._v(" "),s("div",{staticClass:"subtitle"},[s("p",[t._v("查看存储引擎")])]),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('# 查看当前的默认存储引擎\nmysql> show variables like "default_storage_engine";\n# 查询当前数据库支持的存储引擎\nmysql> show engines \\G;\n')])])]),s("div",{staticClass:"subtitle"},[s("p",[t._v("设置表的存储引擎")])]),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# 创建表时指定存储引擎\nmysql> create table demo1(id bigint(12), name varchar(200)) ENGINE = MyISAM; \nmysql> create table demo2(id int(4), name varchar(50)) ENGINE = InnoDB;\n")])])]),s("div",{staticClass:"subtitle"},[s("p",[t._v("修改表的存储引擎")])]),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# 修改一个已经存在的表的存储引擎。\nmysql> alter table demo1 engine = innodb;\n")])])]),s("h2",{attrs:{id:"_1-2-mysql-内部架构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-mysql-内部架构"}},[t._v("#")]),t._v(" 1.2 MySQL 内部架构")])])}),[],!1,null,null,null);a.default=r.exports}}]);