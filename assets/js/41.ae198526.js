(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{1102:function(t,a,s){"use strict";s.r(a);var _=s(14),v=Object(_.a)({},(function(){var t=this,a=t.$createElement,_=t._self._c||a;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"第5章-详细设计"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#第5章-详细设计"}},[t._v("#")]),t._v(" 第5章 详细设计")]),t._v(" "),_("p",[t._v("详细设计的目的：确定具体编程序方案；")]),t._v(" "),_("p",[t._v("软件详细设计的 "),_("strong",[t._v("主要任务是确定每个模块的算法和使用的数据结构")]),t._v("。")]),t._v(" "),_("ul",[_("li",[t._v("确定每个模块的算法；")]),t._v(" "),_("li",[t._v("确定每一个模块的数据组织；")]),t._v(" "),_("li",[t._v("为每个模块设计一组测试用例；")]),t._v(" "),_("li",[t._v("编写详细设计说明书。")])]),t._v(" "),_("h2",{attrs:{id:"_5-1-结构化程序设计"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-结构化程序设计"}},[t._v("#")]),t._v(" 5.1 结构化程序设计")]),t._v(" "),_("p",[t._v("结构化程序设计主张使用 "),_("strong",[t._v("三种基本结构（顺序结构、选择结构和循环结构）")]),t._v(" 来构建程序，并通过 "),_("strong",[t._v("自顶向下、逐步求精")]),t._v(" 的方式进行编程。此外，结构化程序设计还强调 "),_("strong",[t._v("模块化")]),t._v("，即保持模块的 "),_("strong",[t._v("单入口、单出口")]),t._v("，以提高程序的可读性和可维护性。")]),t._v(" "),_("h2",{attrs:{id:"_5-2-人机界面设计"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-人机界面设计"}},[t._v("#")]),t._v(" 5.2 人机界面设计")]),t._v(" "),_("p",[t._v("人机界面设计中的四个设计问题：")]),t._v(" "),_("ul",[_("li",[t._v("系统响应时间；")]),t._v(" "),_("li",[t._v("用户帮助设施；")]),t._v(" "),_("li",[t._v("出错信息处理；")]),t._v(" "),_("li",[t._v("命令交互。")])]),t._v(" "),_("h2",{attrs:{id:"_5-3-过程设计的工具"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-过程设计的工具"}},[t._v("#")]),t._v(" 5.3 过程设计的工具")]),t._v(" "),_("h3",{attrs:{id:"程序流程图"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#程序流程图"}},[t._v("#")]),t._v(" 程序流程图")]),t._v(" "),_("p",[t._v("程序流程图又称为程序框图，它是历史最悠久、使用最广泛的描述过程设计的方法。")]),t._v(" "),_("p",[t._v("符号：")]),t._v(" "),_("p",[_("img",{attrs:{src:s(904),alt:"image-20240120221050559"}})]),t._v(" "),_("h3",{attrs:{id:"盒图-n-s图"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#盒图-n-s图"}},[t._v("#")]),t._v(" 盒图（N-S图）")]),t._v(" "),_("p",[t._v("符号：")]),t._v(" "),_("p",[_("img",{attrs:{src:s(905),alt:"image-20240120221129632"}})]),t._v(" "),_("p",[t._v("程序流程图用箭头代表 "),_("strong",[t._v("控制流")]),t._v("，可以随意转移控制。")]),t._v(" "),_("h3",{attrs:{id:"pad-图"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#pad-图"}},[t._v("#")]),t._v(" PAD 图")]),t._v(" "),_("p",[t._v("PAD 是问题分析图（problem analysis diagram）的英文缩写。")]),t._v(" "),_("p",[t._v("符号：")]),t._v(" "),_("p",[_("img",{attrs:{src:s(906),alt:"image-20240120221150604"}})]),t._v(" "),_("p",[t._v("PAD 图中 "),_("strong",[t._v("竖线的总条数就是程序的层次数")]),t._v("。")]),t._v(" "),_("h3",{attrs:{id:"判定表"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#判定表"}},[t._v("#")]),t._v(" 判定表")]),t._v(" "),_("p",[_("img",{attrs:{src:s(907),alt:"image-20240120221341823"}})]),t._v(" "),_("p",[t._v("判定表右半部的每一列实质上是一条规则，规定了与特定的条件组合相对应的动作。")]),t._v(" "),_("h3",{attrs:{id:"判定树"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#判定树"}},[t._v("#")]),t._v(" 判定树")]),t._v(" "),_("p",[_("img",{attrs:{src:s(908),alt:"image-20240120221407427"}})]),t._v(" "),_("p",[t._v("判定树能清晰地表达复杂的条件组合与所对应的操作之间的关系，易于理解和使用。")])])}),[],!1,null,null,null);a.default=v.exports},904:function(t,a,s){t.exports=s.p+"assets/img/image-20240120221050559.63f5427f.png"},905:function(t,a,s){t.exports=s.p+"assets/img/image-20240120221129632.df0473e2.png"},906:function(t,a,s){t.exports=s.p+"assets/img/image-20240120221150604.be908841.png"},907:function(t,a,s){t.exports=s.p+"assets/img/image-20240120221341823.5e15bbda.png"},908:function(t,a,s){t.exports=s.p+"assets/img/image-20240120221407427.3fda4823.png"}}]);