(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{546:function(t,s,a){t.exports=a.p+"assets/img/image-20220605152922656.cfc4a5ff.png"},547:function(t,s,a){t.exports=a.p+"assets/img/image-20220605154932649.83d5fefd.png"},548:function(t,s,a){t.exports=a.p+"assets/img/image-20220605165116798.3010dca7.png"},549:function(t,s,a){t.exports=a.p+"assets/img/image-20220608094605837.34724509.png"},550:function(t,s,a){t.exports=a.p+"assets/img/image-20220608103726323.51d37695.png"},551:function(t,s,a){t.exports=a.p+"assets/img/image-20220608164852075.eaf55374.png"},552:function(t,s,a){t.exports=a.p+"assets/img/image-20220609164620905.727ef4bf.png"},979:function(t,s,a){"use strict";a.r(s);var e=a(14),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"第3章-程序的机器级表示"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第3章-程序的机器级表示"}},[t._v("#")]),t._v(" 第3章 程序的机器级表示")]),t._v(" "),e("h2",{attrs:{id:"_3-1-程序编码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-程序编码"}},[t._v("#")]),t._v(" 3.1 程序编码")]),t._v(" "),e("h3",{attrs:{id:"计算机抽象模型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#计算机抽象模型"}},[t._v("#")]),t._v(" 计算机抽象模型")]),t._v(" "),e("p",[t._v("计算机利用更简单的抽象模型来隐藏实现的细节。对于机器级编程来说，其中两种抽象尤为重要。")]),t._v(" "),e("p",[t._v("第一种是由指令集体系结构或指令集架构（Instruction Set Architecture, ISA）来定义机器级程序的格式和行为，它定义了处理器状态、指令的格式，以及每条指令对状态的影响。大多数 ISA，包括 x86-64，将程序的行为描述成好像每条指令都是按顺序执行的，一条指令结束后，下一条再开始。处理器的硬件远比描述的精细复杂，它们并发地执行许多指令，但是可以采取措施保证整体行为与 ISA 指定的顺序执行的行为完全一致。")]),t._v(" "),e("p",[t._v("第二种抽象是，机器级程序使用的内存地址是虚拟地址，提供的内存模型看上去是一个非常大的字节数组。存储器系统的实际实现是将多个硬件存储器和操作系统软件组合起来。")]),t._v(" "),e("h2",{attrs:{id:"_3-2-访问信息"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-访问信息"}},[t._v("#")]),t._v(" 3.2 访问信息")]),t._v(" "),e("h3",{attrs:{id:"操作数指示符"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#操作数指示符"}},[t._v("#")]),t._v(" 操作数指示符")]),t._v(" "),e("p",[t._v("不同位的寄存器名字不同，使用的时候要注意。")]),t._v(" "),e("p",[e("img",{attrs:{src:a(546),alt:"image-20220605152922656"}})]),t._v(" "),e("p",[t._v("三种类型的操作数：")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("立即数（Immediate），用来表示常数值，比如 $0x1f。不同的指令允许的立即数值范围不同，汇编器会自动选择最紧凑的方式进行数值编码。")])]),t._v(" "),e("li",[e("p",[t._v("寄存器（Register），它表示某个寄存器的内容，16 个寄存器的低位 1 字节、2 字节、4 字节或 8 字节中的一个作为操作数，这些字节数分别对应于 8 位、16 位、32 位或 64 位。")])]),t._v(" "),e("li",[e("p",[t._v("内存地址（Memory），它会根据计算出来的地址（通常称为有效地址）访问某个内存位置。")])])]),t._v(" "),e("h3",{attrs:{id:"数据传送指令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数据传送指令"}},[t._v("#")]),t._v(" 数据传送指令")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("指令")]),t._v(" "),e("th",[t._v("效果")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("MOV S,D")]),t._v(" "),e("td",[t._v("D←S")]),t._v(" "),e("td",[t._v("传送")])]),t._v(" "),e("tr",[e("td",[t._v("movb")]),t._v(" "),e("td"),t._v(" "),e("td",[t._v("传送字节")])]),t._v(" "),e("tr",[e("td",[t._v("movw")]),t._v(" "),e("td"),t._v(" "),e("td",[t._v("传送字")])]),t._v(" "),e("tr",[e("td",[t._v("movl")]),t._v(" "),e("td"),t._v(" "),e("td",[t._v("传输双字")])]),t._v(" "),e("tr",[e("td",[t._v("movq")]),t._v(" "),e("td"),t._v(" "),e("td",[t._v("传送四字")])]),t._v(" "),e("tr",[e("td",[t._v("movabsq I, R")]),t._v(" "),e("td",[t._v("R←I")]),t._v(" "),e("td",[t._v("传送绝对的四字")])])])]),t._v(" "),e("p",[e("strong",[t._v("操作数组合")])]),t._v(" "),e("p",[e("img",{attrs:{src:a(547),alt:"image-20220605154932649"}})]),t._v(" "),e("p",[e("strong",[t._v("注意")]),t._v("：传送指令的两个操作数不能都指向内存位置。将一个值从一个内存位置复制到另一个内存位置需要两条指令 —— 第一条指令将源值加载到寄存器中，第二条将该寄存器值写入目的位置。")]),t._v(" "),e("p",[e("strong",[t._v("压入和弹出栈数据")])]),t._v(" "),e("p",[e("img",{attrs:{src:a(548),alt:"image-20220605165116798"}})]),t._v(" "),e("p",[e("strong",[t._v("内存寻址")])]),t._v(" "),e("p",[t._v("格式："),e("eq",[e("span",{staticClass:"katex"},[e("span",{staticClass:"katex-mathml"},[e("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[e("semantics",[e("mrow",[e("mrow",[e("mi",{attrs:{mathvariant:"normal"}},[t._v("I")]),e("mi",{attrs:{mathvariant:"normal"}},[t._v("m")]),e("mi",{attrs:{mathvariant:"normal"}},[t._v("m")])],1),e("mo",{attrs:{stretchy:"false"}},[t._v("(")]),e("msub",[e("mi",[t._v("E")]),e("mi",[t._v("b")])],1),e("mo",{attrs:{separator:"true"}},[t._v(",")]),e("mi",[t._v("E")]),e("mi",[t._v("i")]),e("mo",{attrs:{separator:"true"}},[t._v(",")]),e("mi",[t._v("s")]),e("mo",{attrs:{stretchy:"false"}},[t._v(")")])],1),e("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("{\\rm Imm}(E_b,Ei,s)")])],1)],1)],1),e("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[e("span",{staticClass:"base"},[e("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),e("span",{staticClass:"mord"},[e("span",{staticClass:"mord"},[e("span",{staticClass:"mord mathrm"},[t._v("I")]),e("span",{staticClass:"mord mathrm"},[t._v("m")]),e("span",{staticClass:"mord mathrm"},[t._v("m")])])]),e("span",{staticClass:"mopen"},[t._v("(")]),e("span",{staticClass:"mord"},[e("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.05764em"}},[t._v("E")]),e("span",{staticClass:"msupsub"},[e("span",{staticClass:"vlist-t vlist-t2"},[e("span",{staticClass:"vlist-r"},[e("span",{staticClass:"vlist",staticStyle:{height:"0.33610799999999996em"}},[e("span",{staticStyle:{top:"-2.5500000000000003em","margin-left":"-0.05764em","margin-right":"0.05em"}},[e("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),e("span",{staticClass:"sizing reset-size6 size3 mtight"},[e("span",{staticClass:"mord mathdefault mtight"},[t._v("b")])])])]),e("span",{staticClass:"vlist-s"},[t._v("​")])]),e("span",{staticClass:"vlist-r"},[e("span",{staticClass:"vlist",staticStyle:{height:"0.15em"}},[e("span")])])])])]),e("span",{staticClass:"mpunct"},[t._v(",")]),e("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.16666666666666666em"}}),e("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.05764em"}},[t._v("E")]),e("span",{staticClass:"mord mathdefault"},[t._v("i")]),e("span",{staticClass:"mpunct"},[t._v(",")]),e("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.16666666666666666em"}}),e("span",{staticClass:"mord mathdefault"},[t._v("s")]),e("span",{staticClass:"mclose"},[t._v(")")])])])])])],1),t._v(" "),e("p",[t._v("规则："),e("eq",[e("span",{staticClass:"katex"},[e("span",{staticClass:"katex-mathml"},[e("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[e("semantics",[e("mrow",[e("mi",[t._v("E")]),e("mi",[t._v("A")]),e("mo",[t._v("=")]),e("mrow",[e("mi",{attrs:{mathvariant:"normal"}},[t._v("I")]),e("mi",{attrs:{mathvariant:"normal"}},[t._v("m")]),e("mi",{attrs:{mathvariant:"normal"}},[t._v("m")])],1),e("mo",[t._v("+")]),e("mo",{attrs:{stretchy:"false"}},[t._v("[")]),e("msub",[e("mi",[t._v("E")]),e("mi",[t._v("b")])],1),e("mo",[t._v("+")]),e("msub",[e("mi",[t._v("E")]),e("mi",[t._v("i")])],1),e("mo",[t._v("∗")]),e("mi",[t._v("s")]),e("mo",{attrs:{stretchy:"false"}},[t._v("]")])],1),e("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("EA={\\rm Imm}+[E_b+E_i*s]")])],1)],1)],1),e("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[e("span",{staticClass:"base"},[e("span",{staticClass:"strut",staticStyle:{height:"0.68333em","vertical-align":"0em"}}),e("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.05764em"}},[t._v("E")]),e("span",{staticClass:"mord mathdefault"},[t._v("A")]),e("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2777777777777778em"}}),e("span",{staticClass:"mrel"},[t._v("=")]),e("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2777777777777778em"}})]),e("span",{staticClass:"base"},[e("span",{staticClass:"strut",staticStyle:{height:"0.76666em","vertical-align":"-0.08333em"}}),e("span",{staticClass:"mord"},[e("span",{staticClass:"mord"},[e("span",{staticClass:"mord mathrm"},[t._v("I")]),e("span",{staticClass:"mord mathrm"},[t._v("m")]),e("span",{staticClass:"mord mathrm"},[t._v("m")])])]),e("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}}),e("span",{staticClass:"mbin"},[t._v("+")]),e("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}})]),e("span",{staticClass:"base"},[e("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),e("span",{staticClass:"mopen"},[t._v("[")]),e("span",{staticClass:"mord"},[e("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.05764em"}},[t._v("E")]),e("span",{staticClass:"msupsub"},[e("span",{staticClass:"vlist-t vlist-t2"},[e("span",{staticClass:"vlist-r"},[e("span",{staticClass:"vlist",staticStyle:{height:"0.33610799999999996em"}},[e("span",{staticStyle:{top:"-2.5500000000000003em","margin-left":"-0.05764em","margin-right":"0.05em"}},[e("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),e("span",{staticClass:"sizing reset-size6 size3 mtight"},[e("span",{staticClass:"mord mathdefault mtight"},[t._v("b")])])])]),e("span",{staticClass:"vlist-s"},[t._v("​")])]),e("span",{staticClass:"vlist-r"},[e("span",{staticClass:"vlist",staticStyle:{height:"0.15em"}},[e("span")])])])])]),e("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}}),e("span",{staticClass:"mbin"},[t._v("+")]),e("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}})]),e("span",{staticClass:"base"},[e("span",{staticClass:"strut",staticStyle:{height:"0.83333em","vertical-align":"-0.15em"}}),e("span",{staticClass:"mord"},[e("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.05764em"}},[t._v("E")]),e("span",{staticClass:"msupsub"},[e("span",{staticClass:"vlist-t vlist-t2"},[e("span",{staticClass:"vlist-r"},[e("span",{staticClass:"vlist",staticStyle:{height:"0.31166399999999994em"}},[e("span",{staticStyle:{top:"-2.5500000000000003em","margin-left":"-0.05764em","margin-right":"0.05em"}},[e("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),e("span",{staticClass:"sizing reset-size6 size3 mtight"},[e("span",{staticClass:"mord mathdefault mtight"},[t._v("i")])])])]),e("span",{staticClass:"vlist-s"},[t._v("​")])]),e("span",{staticClass:"vlist-r"},[e("span",{staticClass:"vlist",staticStyle:{height:"0.15em"}},[e("span")])])])])]),e("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}}),e("span",{staticClass:"mbin"},[t._v("∗")]),e("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}})]),e("span",{staticClass:"base"},[e("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),e("span",{staticClass:"mord mathdefault"},[t._v("s")]),e("span",{staticClass:"mclose"},[t._v("]")])])])])])],1),t._v(" "),e("ul",[e("li",[e("eq",[e("span",{staticClass:"katex"},[e("span",{staticClass:"katex-mathml"},[e("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[e("semantics",[e("mrow",[e("mi",{attrs:{mathvariant:"normal"}},[t._v("I")]),e("mi",{attrs:{mathvariant:"normal"}},[t._v("m")]),e("mi",{attrs:{mathvariant:"normal"}},[t._v("m")])],1),e("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("{\\rm Imm}")])],1)],1)],1),e("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[e("span",{staticClass:"base"},[e("span",{staticClass:"strut",staticStyle:{height:"0.68333em","vertical-align":"0em"}}),e("span",{staticClass:"mord"},[e("span",{staticClass:"mord"},[e("span",{staticClass:"mord mathrm"},[t._v("I")]),e("span",{staticClass:"mord mathrm"},[t._v("m")]),e("span",{staticClass:"mord mathrm"},[t._v("m")])])])])])])]),t._v(" : 常数 1, 2, or 4 bytes")],1),t._v(" "),e("li",[e("eq",[e("span",{staticClass:"katex"},[e("span",{staticClass:"katex-mathml"},[e("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[e("semantics",[e("mrow",[e("msub",[e("mi",[t._v("E")]),e("mi",[t._v("b")])],1)],1),e("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("E_b")])],1)],1)],1),e("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[e("span",{staticClass:"base"},[e("span",{staticClass:"strut",staticStyle:{height:"0.83333em","vertical-align":"-0.15em"}}),e("span",{staticClass:"mord"},[e("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.05764em"}},[t._v("E")]),e("span",{staticClass:"msupsub"},[e("span",{staticClass:"vlist-t vlist-t2"},[e("span",{staticClass:"vlist-r"},[e("span",{staticClass:"vlist",staticStyle:{height:"0.33610799999999996em"}},[e("span",{staticStyle:{top:"-2.5500000000000003em","margin-left":"-0.05764em","margin-right":"0.05em"}},[e("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),e("span",{staticClass:"sizing reset-size6 size3 mtight"},[e("span",{staticClass:"mord mathdefault mtight"},[t._v("b")])])])]),e("span",{staticClass:"vlist-s"},[t._v("​")])]),e("span",{staticClass:"vlist-r"},[e("span",{staticClass:"vlist",staticStyle:{height:"0.15em"}},[e("span")])])])])])])])])]),t._v(": 基址寄存器")],1),t._v(" "),e("li",[e("eq",[e("span",{staticClass:"katex"},[e("span",{staticClass:"katex-mathml"},[e("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[e("semantics",[e("mrow",[e("msub",[e("mi",[t._v("E")]),e("mi",[t._v("i")])],1)],1),e("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("E_i")])],1)],1)],1),e("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[e("span",{staticClass:"base"},[e("span",{staticClass:"strut",staticStyle:{height:"0.83333em","vertical-align":"-0.15em"}}),e("span",{staticClass:"mord"},[e("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.05764em"}},[t._v("E")]),e("span",{staticClass:"msupsub"},[e("span",{staticClass:"vlist-t vlist-t2"},[e("span",{staticClass:"vlist-r"},[e("span",{staticClass:"vlist",staticStyle:{height:"0.31166399999999994em"}},[e("span",{staticStyle:{top:"-2.5500000000000003em","margin-left":"-0.05764em","margin-right":"0.05em"}},[e("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),e("span",{staticClass:"sizing reset-size6 size3 mtight"},[e("span",{staticClass:"mord mathdefault mtight"},[t._v("i")])])])]),e("span",{staticClass:"vlist-s"},[t._v("​")])]),e("span",{staticClass:"vlist-r"},[e("span",{staticClass:"vlist",staticStyle:{height:"0.15em"}},[e("span")])])])])])])])])]),t._v("：变址寄存器")],1),t._v(" "),e("li",[e("eq",[e("span",{staticClass:"katex"},[e("span",{staticClass:"katex-mathml"},[e("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[e("semantics",[e("mrow",[e("mi",[t._v("s")])],1),e("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("s")])],1)],1)],1),e("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[e("span",{staticClass:"base"},[e("span",{staticClass:"strut",staticStyle:{height:"0.43056em","vertical-align":"0em"}}),e("span",{staticClass:"mord mathdefault"},[t._v("s")])])])])]),t._v("：比例因子 1, 2, 4, or 8")],1)]),t._v(" "),e("p",[t._v("举例：")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Expression")]),t._v(" "),e("th",[t._v("Address Computation")]),t._v(" "),e("th",[t._v("Address")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("code",[t._v("0x8(%edx)")])]),t._v(" "),e("td",[t._v("0xf000 + 0x8")]),t._v(" "),e("td",[t._v("0xf008")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("(%edx, %ecx)")])]),t._v(" "),e("td",[t._v("0xf000 + 0x100")]),t._v(" "),e("td",[t._v("0xf100")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("(%edx, %ecx, 4)")])]),t._v(" "),e("td",[t._v("0xf000 + 4*0x100")]),t._v(" "),e("td",[t._v("0xf400")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("0x80(, %edx, 2)")])]),t._v(" "),e("td",[t._v("2*0xf000 + 0x80")]),t._v(" "),e("td",[t._v("0x1e080")])])])]),t._v(" "),e("p",[e("strong",[t._v("lea 寻址")])]),t._v(" "),e("p",[t._v("格式：leal Src, Dest")]),t._v(" "),e("p",[t._v("计算内存地址值本身（不取内存里的值）")]),t._v(" "),e("p",[t._v("举例：")]),t._v(" "),e("div",{staticClass:"language-c extra-class"},[e("pre",{pre:!0,attrs:{class:"language-c"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mul12")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" x"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" x "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("leal (%eax,%eax,2), %eax \t;t <- x + x * 2\nsall $2, %eax \t\t\t\t;return t << 2\n")])])]),e("h2",{attrs:{id:"_3-3-算术和逻辑操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-算术和逻辑操作"}},[t._v("#")]),t._v(" 3.3 算术和逻辑操作")]),t._v(" "),e("h3",{attrs:{id:"双操作数指令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#双操作数指令"}},[t._v("#")]),t._v(" 双操作数指令")]),t._v(" "),e("div",{staticClass:"table-column-50-50-container"},[e("table",[e("thead",[e("tr",[e("th",[t._v("格式")]),t._v(" "),e("th",[t._v("计算")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("strong",[t._v("addl")]),t._v(" Src,Dest")]),t._v(" "),e("td",[t._v("Dest = Dest + Src")])]),t._v(" "),e("tr",[e("td",[e("strong",[t._v("subl")]),t._v(" Src,Dest")]),t._v(" "),e("td",[t._v("Dest = Dest - Src")])]),t._v(" "),e("tr",[e("td",[e("strong",[t._v("imull")]),t._v(" Src,Dest")]),t._v(" "),e("td",[t._v("Dest = Dest * Src")])]),t._v(" "),e("tr",[e("td",[e("strong",[t._v("sall")]),t._v(" Src,Dest")]),t._v(" "),e("td",[t._v("Dest = Dest << Src（Arithmetic）")])]),t._v(" "),e("tr",[e("td",[e("strong",[t._v("shll")]),t._v(" Src,Dest")]),t._v(" "),e("td",[t._v("Dest = Dest << Src（Logical）")])]),t._v(" "),e("tr",[e("td",[e("strong",[t._v("sarl")]),t._v(" Src,Dest")]),t._v(" "),e("td",[t._v("Dest = Dest >> Src（Arithmetic）")])]),t._v(" "),e("tr",[e("td",[e("strong",[t._v("shrl")]),t._v(" Src,Dest")]),t._v(" "),e("td",[t._v("Dest = Dest >> Src（Logical）")])]),t._v(" "),e("tr",[e("td",[e("strong",[t._v("xorl")]),t._v(" Src,Dest")]),t._v(" "),e("td",[t._v("Dest = Dest ^ Src")])]),t._v(" "),e("tr",[e("td",[e("strong",[t._v("andl")]),t._v(" Src,Dest")]),t._v(" "),e("td",[t._v("Dest = Dest & Src")])]),t._v(" "),e("tr",[e("td",[e("strong",[t._v("orl")]),t._v(" Src,Dest")]),t._v(" "),e("td",[t._v("Dest = Dest | Src")])])])])]),e("h3",{attrs:{id:"单操作数指令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#单操作数指令"}},[t._v("#")]),t._v(" 单操作数指令")]),t._v(" "),e("div",{staticClass:"table-column-50-50-container"},[e("table",[e("thead",[e("tr",[e("th",[t._v("格式")]),t._v(" "),e("th",[t._v("计算")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("strong",[t._v("incl")]),t._v(" Dest")]),t._v(" "),e("td",[t._v("Dest = Dest + 1")])]),t._v(" "),e("tr",[e("td",[e("strong",[t._v("decl")]),t._v(" Dest")]),t._v(" "),e("td",[t._v("Dest = Dest - 1")])]),t._v(" "),e("tr",[e("td",[e("strong",[t._v("negl")]),t._v(" Dest")]),t._v(" "),e("td",[t._v("Dest = -Dest（取补 = 各位取反后 + 1）")])]),t._v(" "),e("tr",[e("td",[e("strong",[t._v("notl")]),t._v(" Dest")]),t._v(" "),e("td",[t._v("Dest = ~Dest（取反=各位取反）")])])])])]),e("h3",{attrs:{id:"算术指令示例"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#算术指令示例"}},[t._v("#")]),t._v(" 算术指令示例")]),t._v(" "),e("div",{staticClass:"language-c extra-class"},[e("pre",{pre:!0,attrs:{class:"language-c"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("arith")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" x"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" y"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" z"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" t1 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" y"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" t2 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" z "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" t1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" t3 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" t4 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" y "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("48")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" t5 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" t3 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" t4"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" rval "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" t2 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" t5"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" rval"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("arith:\npushl %ebp\nmovl %esp, %ebp\n\nmovl 8(%ebp), %ecx\t\t\t#ecx = x\nmovl 12(%ebp), %edx\t\t\t#edx = y\nleal (%edx,%edx,2),%eax\t\t#eax = y + y * 2\nsall $4, %eax\t\t\t\t#eax *= 16 (t4)\nleal 4(%ecx,%eax), %eax\t\t#eax = 4 + x + t4 (t5)\naddl %ecx, %edx\t\t\t\t#edx = y + x (t1)\naddl 16(%ebp), %edx\t\t\t#edx += z (t2)\nimull %edx, %eax\t\t\t#eax = t5 * t2 (rval)\n\npopl %ebp\nret\n")])])]),e("p",[t._v("汇编指令与 C 语言代码有不同的执行顺序。有些代码对应多条指令，有些指令一次性完成多行代码。")]),t._v(" "),e("h3",{attrs:{id:"特殊算术操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#特殊算术操作"}},[t._v("#")]),t._v(" 特殊算术操作")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("指令")]),t._v(" "),e("th",[t._v("效果")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("strong",[t._v("imull")]),t._v(" S")]),t._v(" "),e("td",[t._v("(%edx : %eax ) ← S × %eax")]),t._v(" "),e("td",[t._v("有符号全64位乘法")])]),t._v(" "),e("tr",[e("td",[e("strong",[t._v("mull")]),t._v(" S")]),t._v(" "),e("td",[t._v("(%edx : %eax ) ← S × %eax")]),t._v(" "),e("td",[t._v("无符号全64位乘法")])]),t._v(" "),e("tr",[e("td",[e("strong",[t._v("cltd")])]),t._v(" "),e("td",[t._v("(%edx : %eax) ← SignExtend(%eax)")]),t._v(" "),e("td",[t._v("转为四字")])]),t._v(" "),e("tr",[e("td",[e("strong",[t._v("idivl")]),t._v(" S")]),t._v(" "),e("td",[t._v("%edx ← (%edx : %eax) mod S"),e("br"),t._v("%eax ← (%edx : %eax ) ÷ S")]),t._v(" "),e("td",[t._v("有符号除法")])]),t._v(" "),e("tr",[e("td",[e("strong",[t._v("divl")]),t._v(" S")]),t._v(" "),e("td",[t._v("%edx ← (%edx : %eax) mod S"),e("br"),t._v("%eax ← (%edx : %eax) ÷ S")]),t._v(" "),e("td",[t._v("无符号除法")])])])]),t._v(" "),e("h2",{attrs:{id:"_3-4-控制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-控制"}},[t._v("#")]),t._v(" 3.4 控制")]),t._v(" "),e("h3",{attrs:{id:"条件码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#条件码"}},[t._v("#")]),t._v(" 条件码")]),t._v(" "),e("p",[t._v("每个条件码占一个 bit。")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("条件码")]),t._v(" "),e("th",[t._v("含义")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("CF")]),t._v(" "),e("td",[t._v("进位标志")]),t._v(" "),e("td",[t._v("最近的操作使最高位产生了进位。可以用来检查无符号操作数的溢出。")])]),t._v(" "),e("tr",[e("td",[t._v("ZF")]),t._v(" "),e("td",[t._v("零标志")]),t._v(" "),e("td",[t._v("最近的操作得出的结果为 0 。")])]),t._v(" "),e("tr",[e("td",[t._v("SF")]),t._v(" "),e("td",[t._v("符号标志")]),t._v(" "),e("td",[t._v("最近的操作得到的结果为负数。")])]),t._v(" "),e("tr",[e("td",[t._v("OF")]),t._v(" "),e("td",[t._v("溢出标志")]),t._v(" "),e("td",[t._v("最近的操作导致一个补码溢出——正溢出或负溢出。")])])])]),t._v(" "),e("p",[e("strong",[t._v("设置条件码")])]),t._v(" "),e("p",[e("code",[t._v("cmpl Src, Dest")]),t._v("：Dest – Src。影响标志位。")]),t._v(" "),e("p",[e("code",[t._v("testl Src, Dest")]),t._v("：Dest & Src。影响标志位。")]),t._v(" "),e("p",[e("strong",[t._v("setX 指令")]),t._v("：根据条件码的组合将一个字节设置为 0 或 1。")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("setX")]),t._v(" "),e("th",[t._v("Condition")]),t._v(" "),e("th",[t._v("Description")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("sete/setz")]),t._v(" "),e("td",[t._v("ZF")]),t._v(" "),e("td",[t._v("Equal / Zero")])]),t._v(" "),e("tr",[e("td",[t._v("setne/setnz")]),t._v(" "),e("td",[t._v("~ZF")]),t._v(" "),e("td",[t._v("Not Equal / Not Zero")])]),t._v(" "),e("tr",[e("td",[t._v("sets")]),t._v(" "),e("td",[t._v("SF")]),t._v(" "),e("td",[t._v("Negative")])]),t._v(" "),e("tr",[e("td",[t._v("setns")]),t._v(" "),e("td",[t._v("~SF")]),t._v(" "),e("td",[t._v("Nonnegative")])]),t._v(" "),e("tr",[e("td",[t._v("setg")]),t._v(" "),e("td",[t._v("~(SF ^ OF) & ~ZF")]),t._v(" "),e("td",[t._v("Greater (Signed)")])]),t._v(" "),e("tr",[e("td",[t._v("setge")]),t._v(" "),e("td",[t._v("~(SF ^ OF)")]),t._v(" "),e("td",[t._v("Greater or Equal (Signed)")])]),t._v(" "),e("tr",[e("td",[t._v("setl")]),t._v(" "),e("td",[t._v("(SF ^ OF)")]),t._v(" "),e("td",[t._v("Less (Signed)")])]),t._v(" "),e("tr",[e("td",[t._v("setle")]),t._v(" "),e("td",[t._v("(SF ^ OF) | ZF")]),t._v(" "),e("td",[t._v("Less or Equal (Signed)")])]),t._v(" "),e("tr",[e("td",[t._v("seta")]),t._v(" "),e("td",[t._v("~CF & ~ZF")]),t._v(" "),e("td",[t._v("Above (unsigned)")])]),t._v(" "),e("tr",[e("td",[t._v("setb")]),t._v(" "),e("td",[t._v("CF")]),t._v(" "),e("td",[t._v("Below (unsigned)")])])])]),t._v(" "),e("p",[t._v("举例：")]),t._v(" "),e("div",{staticClass:"language-c extra-class"},[e("pre",{pre:!0,attrs:{class:"language-c"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("gt")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" x"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" y"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" x "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" y"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("movl \t12(%ebp), %eax \t\t# eax = y\ncmpl \t%eax, 8(%ebp)\t\t# compare x : y\nsetg \t%al \t\t\t\t# al = x > y\nmovzbl \t%al, %eax \t\t\t# zero rest of %eax\n")])])]),e("h3",{attrs:{id:"翻译条件分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#翻译条件分支"}},[t._v("#")]),t._v(" 翻译条件分支")]),t._v(" "),e("p",[e("strong",[t._v("jX 指令（跳转指令）")]),t._v("：根据不同的条件跳转到某条指令处执行")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("jX")]),t._v(" "),e("th",[t._v("Condition")]),t._v(" "),e("th",[t._v("Description")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("jmp")]),t._v(" "),e("td",[t._v("1")]),t._v(" "),e("td",[t._v("无条件跳转")])]),t._v(" "),e("tr",[e("td",[t._v("je/jz")]),t._v(" "),e("td",[t._v("ZF")]),t._v(" "),e("td",[t._v("Equal / Zero")])]),t._v(" "),e("tr",[e("td",[t._v("Jne/jnz")]),t._v(" "),e("td",[t._v("~ZF")]),t._v(" "),e("td",[t._v("Not Equal / Not Zero")])]),t._v(" "),e("tr",[e("td",[t._v("js")]),t._v(" "),e("td",[t._v("SF")]),t._v(" "),e("td",[t._v("Negative")])]),t._v(" "),e("tr",[e("td",[t._v("jns")]),t._v(" "),e("td",[t._v("~SF")]),t._v(" "),e("td",[t._v("Nonnegative")])]),t._v(" "),e("tr",[e("td",[t._v("jg")]),t._v(" "),e("td",[t._v("~(SF ^ OF) & ~ZF")]),t._v(" "),e("td",[t._v("Greater (Signed)")])]),t._v(" "),e("tr",[e("td",[t._v("jge")]),t._v(" "),e("td",[t._v("~(SF ^ OF)")]),t._v(" "),e("td",[t._v("Greater or Equal (Signed)")])]),t._v(" "),e("tr",[e("td",[t._v("jl")]),t._v(" "),e("td",[t._v("(SF ^ OF)")]),t._v(" "),e("td",[t._v("Less (Signed)")])]),t._v(" "),e("tr",[e("td",[t._v("jle")]),t._v(" "),e("td",[t._v("(SF ^ OF) | ZF")]),t._v(" "),e("td",[t._v("Less or Equal (Signed)")])]),t._v(" "),e("tr",[e("td",[t._v("ja")]),t._v(" "),e("td",[t._v("~CF & ~ZF")]),t._v(" "),e("td",[t._v("Above (unsigned)")])]),t._v(" "),e("tr",[e("td",[t._v("jb")]),t._v(" "),e("td",[t._v("CF")]),t._v(" "),e("td",[t._v("Below (unsigned)")])])])]),t._v(" "),e("p",[t._v("举例：")]),t._v(" "),e("div",{staticClass:"language-c extra-class"},[e("pre",{pre:!0,attrs:{class:"language-c"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("absdiff")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" x"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" y"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" result"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" y"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        result "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" y"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        result "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" y "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" x"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" result"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("absdiff:\n\tpushl \t%ebp\n\tmovl\t%esp, %ebp\n\tmovl\t8(%ebp), %edx\n\tmovl \t12(%ebp), %eax\n\tcmpl \t%eax, %edx\n\tjle \t.L6\n\tsubl \t%eax, %edx\n\tmovl \t%edx, %eax\n\tjmp \t.L7\n.L6:\n\tsubl \t%edx, %eax\n.L7:\n\tpopl %ebp\n\tret\n")])])]),e("h3",{attrs:{id:"循环"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#循环"}},[t._v("#")]),t._v(" 循环")]),t._v(" "),e("p",[e("strong",[t._v("do-while 循环")])]),t._v(" "),e("p",[t._v("举例：")]),t._v(" "),e("div",{staticClass:"language-c extra-class"},[e("pre",{pre:!0,attrs:{class:"language-c"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("dw_loop")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" x"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" y"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        x "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        y "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*=")]),t._v(" n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("y "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" x"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("\tmovl \t8(%ebp), %eax\n\tmovl \t12(%ebp), %ecx\n\tmovl \t16(%ebp), %edx\n.L2:\n\taddl\t%edx, %eax\n\timull \t%edx, %ecx\n\tsubl \t$1, %edx\n\ttestl \t%edx, %edx\n\tjle \t.L5\n\tcmpl \t%edx, %ecx\n\tjl \t.L2\n.L5:\n")])])]),e("p",[e("strong",[t._v("while 循环")])]),t._v(" "),e("p",[t._v("举例：")]),t._v(" "),e("div",{staticClass:"language-c extra-class"},[e("pre",{pre:!0,attrs:{class:"language-c"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("loop_while")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" b"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" result "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" b"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        result "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        a"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" result"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("\tmovl \t8(%ebp), %ecx\n\tmovl \t12(%ebp), %ebx\n\tmovl \t$1, %eax\n\tcmpl \t%ebx, %ecx\n\tjge. \t.L11\n\tleal \t(%ebx, %ecx), %edx\n\tmovl \t$1, %eax\n.L12:\n\timull\t%edx, %eax\n\taddl\t$1, %ecx\n\taddl\t$1, %edx\n\tcmpl\t%ecx, %ebx\n\tjg\t\t.L12\n.L11:\n")])])]),e("p",[e("strong",[t._v("for 循环")])]),t._v(" "),e("p",[t._v("举例：")]),t._v(" "),e("div",{staticClass:"language-c extra-class"},[e("pre",{pre:!0,attrs:{class:"language-c"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("fact_for")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" result "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        result "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*=")]),t._v(" i"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" result"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("\tmovl\t8(%ebp), %ecx\n\tmovl \t$2, %edx\n\tmovl\t$1, %eax\n\tcmpl \t$1, %ecx\n\tjle \t.L14\n.L17: \n\timull \t%edx, %eax\n\taddl \t$1, %edx \n\tcmpl \t%edx, %ecx\n\tjge \t.L17 \n.L14:\n")])])]),e("h3",{attrs:{id:"条件传送指令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#条件传送指令"}},[t._v("#")]),t._v(" 条件传送指令")]),t._v(" "),e("p",[t._v("举例：")]),t._v(" "),e("div",{staticClass:"language-c extra-class"},[e("pre",{pre:!0,attrs:{class:"language-c"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("absdiff")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" b"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" a "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" b "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" b "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" a "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" a "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" b"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[e("strong",[t._v("非优化编译：gcc -S absdiff.c")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("absdiff:\n\tpushl \t%ebp\n\tmovl \t%esp, %ebp\n\tmovl \t8(%ebp), %edx\n\tmovl \t12(%ebp), %eax \n\tcmpl \t%eax, %edx\n\tjge \t.L2\n\tsubl \t%edx, %eax\n\tjmp \t.L4\n.L2:\n\tsubl \t%eax, %edx\n\tmovl \t%edx, %eax\n.L4\n    popl \t%ebp\n    ret\n")])])]),e("p",[t._v("汇编代码出现 jge 这样的跳转指令。对于使用了流水线的 CPU，这样的跳转是存在隐患的，分支预测失败就会刷新掉所有流水线中取到而未执行的指令， 影响运行性能。")]),t._v(" "),e("p",[e("strong",[t._v("优化编译：gcc -S O1 absdiff.c")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("absdiff:\n    pushl \t%ebp\n    movl \t%esp, %ebp\n    pushl \t%ebx\n    movl \t8(%ebp), %ecx\t# ecx = a\n    movl \t12(%ebp), %edx\t# edx = b\n    movl \t%edx, %ebx\t\t# ebx = b\n    subl \t%ecx, %ebx\t\t# ebx = b - a\n    movl \t%ecx, %eax \t\t# eax = a\n    subl \t%edx, %eax\t\t# eax = a - b\n    cmpl \t%edx, %ecx\t\t# compare a : b\n    cmovl \t%ebx, %eax \t\t# if a < b, eax = ebx = b - a\n    popl \t%ebx\n    popl \t%ebp\n    ret\n")])])]),e("h3",{attrs:{id:"switch-语句"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#switch-语句"}},[t._v("#")]),t._v(" switch 语句")]),t._v(" "),e("p",[t._v("举例：")]),t._v(" "),e("div",{staticClass:"language-c extra-class"},[e("pre",{pre:!0,attrs:{class:"language-c"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("switch_eg")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" x"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" y"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" z"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" w "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n            w "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" y "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" z"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n            w "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" y "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" z"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Fall Through */")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n            w "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" z"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n            w "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-=")]),t._v(" z"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n            w "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" w"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("跳转表：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v(".section .rodata\n\t.align 4\n.L4:\n\t.long .L8 # x = 0\n\t.long .L3 # x = 1\n\t.long .L5 # x = 2\n\t.long .L9 # x = 3\n\t.long .L8 # x = 4\n\t.long .L7 # x = 5\n\t.long .L7 # x = 6\n")])])]),e("p",[t._v("开始：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("long switch_eg(long x, long y, long z) {\n    long w = 1;\n    switch (x) {\n        ...\n    }\n    return w;\n}\n")])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("switch_eg:\n\tpushl \t%ebp\n\tmovl \t%esp, %ebp\n\tmovl\t8(%ebp), %eax\n\tcmpl \t$6, %eax \t\t# compare x : 6\n\tja \t\t.L8\t\t\t\t# if unsigned '>' goto default\n\tjmp \t*.L4(, %eax, 4)\n")])])]),e("p",[t._v("代码块1：")]),t._v(" "),e("div",{staticClass:"language-c extra-class"},[e("pre",{pre:!0,attrs:{class:"language-c"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// .L3")]),t._v("\n        w "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" y "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" z"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v(".L3: \t\t\t\t\t\t# x == 1\n\tmovl \t12(%ebp), %eax\t# eax = y\n\timull \t16(%ebp), %eax\t# eax = y * z\n\tjmp\t\t.L2 \t\t\t# goto done\n")])])]),e("p",[t._v("代码块 2 和 3：Fall Through")]),t._v(" "),e("div",{staticClass:"language-c extra-class"},[e("pre",{pre:!0,attrs:{class:"language-c"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n        w "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" y "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" z"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Fall Through */")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n        w "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" z"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v(".L5: \t\t\t\t\t\t# x == 2\n\tmovl \t12(%ebp), %eax \t# eax = y\n\tcltd\n\tidivl \t16(%ebp) \t\t# y / z\n\tjmp .L6\n.L9: \t\t\t\t\t\t# x == 3\n\tmovl \t$1, %eax \t\t# w = 1\n.L6: # merge:\n\taddl \t16(%ebp), %eax \t# w += z\n\tjmp\t\t.L2 \t\t\t# goto done\n")])])]),e("p",[t._v("代码块 5、6 和 default：")]),t._v(" "),e("div",{staticClass:"language-c extra-class"},[e("pre",{pre:!0,attrs:{class:"language-c"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n        w "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-=")]),t._v(" z"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n        w "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v(".L7:\t\t\t\t\t\t# x == 5,6\n\tmovl\t$1, %eax\t\t# w = 1\n\tsubl \t16(%ebp), %eax \t# w = 1 - z\n\tjmp \t.L2 \t\t\t# goto done\n.L8: \t\t\t\t\t\t# default\n\tmovl \t$2, %eax \t\t# w = 2\n.L2: \t\t\t\t\t\t# done\n")])])]),e("p",[t._v("结束：")]),t._v(" "),e("div",{staticClass:"language-c extra-class"},[e("pre",{pre:!0,attrs:{class:"language-c"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" w"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v(".L2: \t\t\t\t\t\t# done\n\tpopl %ebp\n\tret\n")])])]),e("p",[t._v("使用跳转表是一种非常有效的实现多重分支的方法。")]),t._v(" "),e("h2",{attrs:{id:"_3-5-过程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-过程"}},[t._v("#")]),t._v(" 3.5 过程")]),t._v(" "),e("p",[t._v("过程的调用包括将数据和控制从代码的一部分传递到另一部分。在进入时为过程的局部变量分配空间，在退出时释放空间。大多数机器，只提供转移控制到过程和从过程中转移出控制这种简单指令。数据传递和局部变量的分配释放都是通过程序栈来实现。")]),t._v(" "),e("h3",{attrs:{id:"栈帧结构"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#栈帧结构"}},[t._v("#")]),t._v(" 栈帧结构")]),t._v(" "),e("p",[t._v("机器用栈来"),e("strong",[t._v("传递过程参数")]),t._v("、"),e("strong",[t._v("存储返回信息")]),t._v("、"),e("strong",[t._v("保存寄存器")]),t._v("用于以后恢复，以及"),e("strong",[t._v("本地存储")]),t._v("。而为单个过程分配的那部分栈称为"),e("strong",[t._v("栈帧")]),t._v("（stack frame）。")]),t._v(" "),e("p",[e("img",{attrs:{src:a(549),alt:"image-20220608094605837"}})]),t._v(" "),e("p",[t._v("当前函数或过程的栈顶地址保存在 %esp 中，栈底地址保存在 %ebp 中。")]),t._v(" "),e("p",[t._v("栈向低地址方向增长，或者说是向地址 0x0 处增加的，因此 %esp 中的值小于或等于 %ebp 中的值。")]),t._v(" "),e("p",[t._v("栈帧是内存中一段连续的内存空间。被调用者的栈帧紧挨着调用者的栈帧。")]),t._v(" "),e("h3",{attrs:{id:"转移控制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#转移控制"}},[t._v("#")]),t._v(" 转移控制")]),t._v(" "),e("p",[t._v("支待过程调用和返回的指令：")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("指令")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("call Label")]),t._v(" "),e("td",[t._v("过程调用")])]),t._v(" "),e("tr",[e("td",[t._v("call *Operand")]),t._v(" "),e("td",[t._v("过程调用")])]),t._v(" "),e("tr",[e("td",[t._v("leave")]),t._v(" "),e("td",[t._v("为返回准备栈")])]),t._v(" "),e("tr",[e("td",[t._v("ret")]),t._v(" "),e("td",[t._v("从过程调用中返回")])])])]),t._v(" "),e("p",[t._v("call 指令有一个目标，指明被调用过程起始的指令地址。同跳转一样，调用可以是直接的，也可以是间接的。在汇编代码中，直接调用的目标是一个标号，而间接调用的目标是 "),e("code",[t._v("*")]),t._v(" 后面跟一个操作数指示符。")]),t._v(" "),e("p",[t._v("call 指令的效果是将返回地址入栈，并跳转到被调用过程的起始处。返回地址是在程序中紧跟在 call 后面的那条指令的地址，这样当被调用过程返回时，执行会从此处继续。 ret 指令从栈中弹出地址，并跳转到这个位置。正确使用这条指令，可以使栈做好准备，栈指针要指向前面 call 指令存储返回地址的位置。")]),t._v(" "),e("h3",{attrs:{id:"寄存器使用惯例"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#寄存器使用惯例"}},[t._v("#")]),t._v(" 寄存器使用惯例")]),t._v(" "),e("p",[t._v("程序寄存器组是唯一能被所有过程共享的资源。虽然在给定时刻只能有一个过程是活动的，但是我们必须保证当一个过程（调用者）调用另一个过程（被调用者）时，被调用者不会覆盖某个调用者稍后会使用的寄存器的值。")]),t._v(" "),e("p",[t._v("为此， IA32 采用了一组统一的寄存器使用惯例，所有的过程都必须遵守，包括程序库中的过程。")]),t._v(" "),e("p",[t._v("%eax、%edx 和 %ecx 被划分为"),e("strong",[t._v("调用者保存寄存器")]),t._v("。过程 P 调用 Q 时， Q 可以覆盖这些寄存器，而不会破坏任何 P 所需要的数据。")]),t._v(" "),e("p",[t._v("%ebx、%esi 和 %edi 被划分为"),e("strong",[t._v("被调用者保存寄存器")]),t._v("。这意味着 Q 必须在覆盖这些寄存器的值之前，先把它们保存到栈中，并在返回前恢复它们，因为 P  或某更高层次的过程可能会在今后的计算中需要这些值。")]),t._v(" "),e("p",[t._v("此外，根据这里描述的惯例，必须保持寄存器 %ebp 和 %esp 。")]),t._v(" "),e("h3",{attrs:{id:"过程示例"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#过程示例"}},[t._v("#")]),t._v(" 过程示例")]),t._v(" "),e("p",[t._v("考虑下面中定义的 C 过程，其中函数 caller 包括一个对函数 swap_add 的调用。")]),t._v(" "),e("div",{staticClass:"language-c extra-class"},[e("pre",{pre:!0,attrs:{class:"language-c"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("swap_add")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("xp"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("yp"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" x "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("xp"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" y "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("yp"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("xp "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" y"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("yp "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" x "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" y"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("caller")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" arg1 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("534")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" arg2 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1057")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" sum "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("swap_add")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("arg1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("arg2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" diff "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arg1 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" arg2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" sum "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" diff"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("下图给出了 caller 调用函数 swap_add 之前和 swap_add 正在运行时的栈帧结构。有些指令访问的栈位置是相对于栈指针 %esp 的，而另一些访问的栈位置是相对于基地址指针 %ebp 的。这些偏移量由相对于这两个指针的线来表示。")]),t._v(" "),e("p",[e("img",{attrs:{src:a(550),alt:"image-20220608103726323"}})]),t._v(" "),e("p",[t._v("caller 的栈帧包括局部变量 arg1 和 arg2 的存储，其位置相对于帧指针是 -4 和 -8 。这些变量必须存在栈中，因为我们必须为它们生成地址。")]),t._v(" "),e("p",[t._v("caller 编译过的代码：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("caller:\n\tpushl \t%ebp\t\t\t\t# savo old %ebp\n\tmovl \t%esp, %ebp \t\t\t# set %ebp as frame pointer\n\tsubl \t$24, %esp \t\t\t# allocate 24 bytes on stack\n\tmovl \t$534, -4(%ebp) \t\t# set arg1 to 534\n\tmovl \t$1057, -8(%ebp)\t\t# set arg2 to 1057\n\tleal\t-8(%ebp), %eax \t\t# compute &arg2\n\tmovl\t%eax, 4(%esp) \t\t# store on stack\n\tleal \t-4(%ebp), %eax\t\t# compute &arg1\n\tmovl \t%eax, (%esp) \t\t# store on stack\n\tcall \tswap_add \t\t\t# call the swap_add function\n")])])]),e("p",[t._v("保存 %ebp 的一个副本，将 %ebp 设置为栈帧的开始位置。然后将栈指针减去 24，从而在栈上分配 24 个字节。将 arg1 和 arg2 初始化为 534 和 1057，计算 &arg2 和 &arg1 并存储到栈上，形成函数 swap_add 的参数。将参数存储到相对于栈指针偏移量 0 和 +4 的地方，待 swap_add 访问。然后调用 swap_add。")]),t._v(" "),e("p",[t._v("分配给栈帧的 24 个字节中， 8 个用于局部变量，8 个用于向 swap_add 传递参数，还有 8 个未使用。")]),t._v(" "),e("p",[t._v("swap_add 编译过的代码有三个部分：")]),t._v(" "),e("ul",[e("li",[t._v("“建立” 部分，初始化栈帧；")]),t._v(" "),e("li",[t._v("“主体” 部分，执行过程的实际计算；")]),t._v(" "),e("li",[t._v("“结束” 部分，恢复栈的状态，以及过程返回。")])]),t._v(" "),e("p",[t._v("下面是 swap_add 的建立代码。在到达代码的这个部分之前， call 指令已经将返回地址压入栈中。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("swap_add:\n\tpushl \t%ebp\t\t\t\t# save old %ebp\n\tmovl \t%esp, %ebp\t\t\t# set %ebp as frame pointer\n\tpushl \t%ebx\t\t\t\t# save %ebx\n")])])]),e("p",[t._v("函数 swap_add 需要用寄存器 %ebx作为临时存储。因为这是一个被调用者保存寄存器，它会将旧值压入栈中，这是栈帧建立的一部分。")]),t._v(" "),e("p",[t._v("下面是 swap_add 的主体代码：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("\tmovl\t8(%ebp), %edx \t\t# get xp\n\tmovl\t12(%ebp), %ecx\t\t# get yp\n\tmovl\t(%edx), %ebx\t\t# get x\n\tmovl\t(%ecx), %eax\t\t# get y\n\tmovl\t%eax, (%edx)\t\t# store y at xp\n\tmovl\t%ebx, (%ecx)\t\t# store x at yp\n\taddl\t%ebx, %eax\t\t\t# return value = x + y\n")])])]),e("p",[t._v("这段代码从 caller 的栈帧中取出它的参数。因为帧指针已经移动，参数的位置也从相对于 %esp 的旧值 +4 和 0 的位置移到了相对于 %ebp 的新值 +12 和 +8 的位置。")]),t._v(" "),e("p",[t._v("变量 x 和 y 的和存放在寄存器 %eax 中作为返回值传递。")]),t._v(" "),e("p",[t._v("下面是 swap_add 的结束代码：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("\tpopl\t%ebx\t\t\t\t# restore %ebx\n\tpopl\t%ebp\t\t\t\t# restore %ebp\n\tret\t\t\t\t\t\t\t# return\n")])])]),e("p",[t._v("这段代码恢复寄存器 %ebx 和 %ebp 的值，同时也重新设定栈指针使它指向存储的返回值，这样 ret 指令就可以将控制转移回 caller 。")]),t._v(" "),e("p",[t._v("下面的 caller 中的代码紧跟在调用 swap_add 的指令后面：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("\tmovl\t-4(%ebp), %edx\n\tsubl\t-8(%ebp), %edx\n\timull\t%edx, %eax\n\tleave\n\tret\n")])])]),e("p",[t._v("为了计算 diff，这段代码从栈中取出 arg1 和 arg2 的值，并将寄存器 %eax 当作从 swap_add 的返回值。可以观察到，leave 指令的使用在返回前，既重置了栈指针，也重置了帧指针。")]),t._v(" "),e("p",[t._v("我们在代码示例中已经看到， GCC 产生的代码有时候会使用 leave 指令来释放栈帧，而有时会使用一个或者两个 popl 指令。两种方法都可行，对于哪一种更好 Intel 和 AMD 的指导意见也在不断变化。")]),t._v(" "),e("h3",{attrs:{id:"递归过程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#递归过程"}},[t._v("#")]),t._v(" 递归过程")]),t._v(" "),e("p",[t._v("上文栈和链接惯例使得过程能够递归地调用它们自身。因为每个调用在栈中都有它自己的私有空间，多个未完成调用的局部变量不会相互影响。此外，栈的原则很自然地提供了适当的策略，当过程被调用时分配局部存储，当返回时释放存储。")]),t._v(" "),e("p",[t._v("举例：")]),t._v(" "),e("div",{staticClass:"language-c extra-class"},[e("pre",{pre:!0,attrs:{class:"language-c"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("rfact")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" result"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        result "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n        result "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" n "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("rfact")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" result"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("rfact:\n\tpushl\t%ebp\t\t\t\t# save old %ebp\n\tmovl\t%esp, %ebp\t\t\t# set %ebp as frame pointer\n\tpushl\t%ebx\t\t\t\t# save callee save register %ebx\n\tsubl\t$4, %esp\t\t\t# allocate 4 bytes on stack\n\tmovl\t8(%ebp), %ebx\t\t# get n\n\tmovl\t$1, %eax\t\t\t# result = 1\n\tcmpl \t$1, %ebx\t\t\t# compare n:1\n\tjle\t\t.L53\t\t\t\t# if n <= 1, goto done\n\tleal\t-1(%ebx), %eax \t\t# compute n - 1\n\tmovl\t%eax, (%esp)\t\t# store at top of stack\n\tcall\trfact\t\t\t\t# call rfact(n - 1)\n\timull\t%ebx, %eax\t\t\t# compute result = return value * n\n.L53:\t\t\t\t\t\t\t# done:\n\taddl\t$4, %esp\t\t\t# deallocate 4 bytes from stack\n\tpopl\t%ebx\t\t\t\t# restore %ebx\n\tpopl\t%ebp\t\t\t\t# restore %ebp\n\tret\t\t\t\t\t\t\t# return result\n")])])]),e("h2",{attrs:{id:"_3-6-数组分配和访问"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-数组分配和访问"}},[t._v("#")]),t._v(" 3.6 数组分配和访问")]),t._v(" "),e("h3",{attrs:{id:"基本原则"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基本原则"}},[t._v("#")]),t._v(" 基本原则")]),t._v(" "),e("p",[t._v("T A[L]：type T，length L。")]),t._v(" "),e("ul",[e("li",[t._v("在内存中连续分配 L * sizeof(T) 个字节。")]),t._v(" "),e("li",[t._v("标识符 A 可用于表示数组的首地址，也可以通过 Type T* 转换成数组首地址。")])]),t._v(" "),e("p",[t._v("例如，假设 E 是一个 int 型的数组，并且我们想计算 E[i]，在此，E 的地址存放在寄存器 %edx 中，而 i 存放在寄存器 %ecx 中。然后，指令")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("movl (&edx, &ecx, 4), &eax\n")])])]),e("p",[t._v("会执行地址计算 "),e("eq",[e("span",{staticClass:"katex"},[e("span",{staticClass:"katex-mathml"},[e("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[e("semantics",[e("mrow",[e("msub",[e("mi",[t._v("X")]),e("mi",[t._v("E")])],1),e("mo",[t._v("+")]),e("mn",[t._v("4")]),e("mi",[t._v("i")])],1),e("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("X_E+ 4i")])],1)],1)],1),e("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[e("span",{staticClass:"base"},[e("span",{staticClass:"strut",staticStyle:{height:"0.83333em","vertical-align":"-0.15em"}}),e("span",{staticClass:"mord"},[e("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.07847em"}},[t._v("X")]),e("span",{staticClass:"msupsub"},[e("span",{staticClass:"vlist-t vlist-t2"},[e("span",{staticClass:"vlist-r"},[e("span",{staticClass:"vlist",staticStyle:{height:"0.32833099999999993em"}},[e("span",{staticStyle:{top:"-2.5500000000000003em","margin-left":"-0.07847em","margin-right":"0.05em"}},[e("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),e("span",{staticClass:"sizing reset-size6 size3 mtight"},[e("span",{staticClass:"mord mathdefault mtight",staticStyle:{"margin-right":"0.05764em"}},[t._v("E")])])])]),e("span",{staticClass:"vlist-s"},[t._v("​")])]),e("span",{staticClass:"vlist-r"},[e("span",{staticClass:"vlist",staticStyle:{height:"0.15em"}},[e("span")])])])])]),e("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}}),e("span",{staticClass:"mbin"},[t._v("+")]),e("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}})]),e("span",{staticClass:"base"},[e("span",{staticClass:"strut",staticStyle:{height:"0.65952em","vertical-align":"0em"}}),e("span",{staticClass:"mord"},[t._v("4")]),e("span",{staticClass:"mord mathdefault"},[t._v("i")])])])])]),t._v(", 读这个存储器位置的值，并将结果存放到寄存器 %eax 中。允许的缩放因子 1、2、4 和 8 覆盖了所有基本简单数据类型的大小。")],1),t._v(" "),e("h3",{attrs:{id:"指针运算"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#指针运算"}},[t._v("#")]),t._v(" 指针运算")]),t._v(" "),e("p",[t._v("C 语言允许对指针进行运算，而计算出来的值会根据该指针引用的数据类型的大小进行伸缩。也就是说，如果 p 是一个指向类型为 T 的数据的指针， p 的值为 "),e("eq",[e("span",{staticClass:"katex"},[e("span",{staticClass:"katex-mathml"},[e("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[e("semantics",[e("mrow",[e("msub",[e("mi",[t._v("x")]),e("mi",[t._v("p")])],1)],1),e("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("x_p")])],1)],1)],1),e("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[e("span",{staticClass:"base"},[e("span",{staticClass:"strut",staticStyle:{height:"0.716668em","vertical-align":"-0.286108em"}}),e("span",{staticClass:"mord"},[e("span",{staticClass:"mord mathdefault"},[t._v("x")]),e("span",{staticClass:"msupsub"},[e("span",{staticClass:"vlist-t vlist-t2"},[e("span",{staticClass:"vlist-r"},[e("span",{staticClass:"vlist",staticStyle:{height:"0.15139200000000003em"}},[e("span",{staticStyle:{top:"-2.5500000000000003em","margin-left":"0em","margin-right":"0.05em"}},[e("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),e("span",{staticClass:"sizing reset-size6 size3 mtight"},[e("span",{staticClass:"mord mathdefault mtight"},[t._v("p")])])])]),e("span",{staticClass:"vlist-s"},[t._v("​")])]),e("span",{staticClass:"vlist-r"},[e("span",{staticClass:"vlist",staticStyle:{height:"0.286108em"}},[e("span")])])])])])])])])]),t._v("，那么表达式 "),e("eq",[e("span",{staticClass:"katex"},[e("span",{staticClass:"katex-mathml"},[e("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[e("semantics",[e("mrow",[e("mi",[t._v("p")]),e("mo",[t._v("+")]),e("mi",[t._v("i")])],1),e("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("p+i")])],1)],1)],1),e("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[e("span",{staticClass:"base"},[e("span",{staticClass:"strut",staticStyle:{height:"0.7777700000000001em","vertical-align":"-0.19444em"}}),e("span",{staticClass:"mord mathdefault"},[t._v("p")]),e("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}}),e("span",{staticClass:"mbin"},[t._v("+")]),e("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}})]),e("span",{staticClass:"base"},[e("span",{staticClass:"strut",staticStyle:{height:"0.65952em","vertical-align":"0em"}}),e("span",{staticClass:"mord mathdefault"},[t._v("i")])])])])]),t._v(" 的值为 "),e("eq",[e("span",{staticClass:"katex"},[e("span",{staticClass:"katex-mathml"},[e("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[e("semantics",[e("mrow",[e("msub",[e("mi",[t._v("x")]),e("mi",[t._v("p")])],1),e("mo",[t._v("+")]),e("mi",[t._v("L")]),e("mo",[t._v("×")]),e("mi",[t._v("i")])],1),e("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("x_p+L\\times i")])],1)],1)],1),e("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[e("span",{staticClass:"base"},[e("span",{staticClass:"strut",staticStyle:{height:"0.8694379999999999em","vertical-align":"-0.286108em"}}),e("span",{staticClass:"mord"},[e("span",{staticClass:"mord mathdefault"},[t._v("x")]),e("span",{staticClass:"msupsub"},[e("span",{staticClass:"vlist-t vlist-t2"},[e("span",{staticClass:"vlist-r"},[e("span",{staticClass:"vlist",staticStyle:{height:"0.15139200000000003em"}},[e("span",{staticStyle:{top:"-2.5500000000000003em","margin-left":"0em","margin-right":"0.05em"}},[e("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),e("span",{staticClass:"sizing reset-size6 size3 mtight"},[e("span",{staticClass:"mord mathdefault mtight"},[t._v("p")])])])]),e("span",{staticClass:"vlist-s"},[t._v("​")])]),e("span",{staticClass:"vlist-r"},[e("span",{staticClass:"vlist",staticStyle:{height:"0.286108em"}},[e("span")])])])])]),e("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}}),e("span",{staticClass:"mbin"},[t._v("+")]),e("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}})]),e("span",{staticClass:"base"},[e("span",{staticClass:"strut",staticStyle:{height:"0.76666em","vertical-align":"-0.08333em"}}),e("span",{staticClass:"mord mathdefault"},[t._v("L")]),e("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}}),e("span",{staticClass:"mbin"},[t._v("×")]),e("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}})]),e("span",{staticClass:"base"},[e("span",{staticClass:"strut",staticStyle:{height:"0.65952em","vertical-align":"0em"}}),e("span",{staticClass:"mord mathdefault"},[t._v("i")])])])])]),t._v(" 。这里 "),e("eq",[e("span",{staticClass:"katex"},[e("span",{staticClass:"katex-mathml"},[e("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[e("semantics",[e("mrow",[e("mi",[t._v("L")])],1),e("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("L")])],1)],1)],1),e("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[e("span",{staticClass:"base"},[e("span",{staticClass:"strut",staticStyle:{height:"0.68333em","vertical-align":"0em"}}),e("span",{staticClass:"mord mathdefault"},[t._v("L")])])])])]),t._v(" 是数据类型 T 的大小")],1),t._v(" "),e("p",[t._v("假设整型数组 E 的起始地址和整数索引 i 分别存放在寄存器 %edx 和 %ecx 中。一些与 E 有关的表达式：")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("表达式")]),t._v(" "),e("th",[t._v("类型")]),t._v(" "),e("th",[t._v("值")]),t._v(" "),e("th",[t._v("汇编代码")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("E")]),t._v(" "),e("td",[t._v("int *")]),t._v(" "),e("td",[e("eq",[e("span",{staticClass:"katex"},[e("span",{staticClass:"katex-mathml"},[e("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[e("semantics",[e("mrow",[e("msub",[e("mi",[t._v("x")]),e("mi",[t._v("E")])],1)],1),e("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("x_E")])],1)],1)],1),e("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[e("span",{staticClass:"base"},[e("span",{staticClass:"strut",staticStyle:{height:"0.58056em","vertical-align":"-0.15em"}}),e("span",{staticClass:"mord"},[e("span",{staticClass:"mord mathdefault"},[t._v("x")]),e("span",{staticClass:"msupsub"},[e("span",{staticClass:"vlist-t vlist-t2"},[e("span",{staticClass:"vlist-r"},[e("span",{staticClass:"vlist",staticStyle:{height:"0.32833099999999993em"}},[e("span",{staticStyle:{top:"-2.5500000000000003em","margin-left":"0em","margin-right":"0.05em"}},[e("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),e("span",{staticClass:"sizing reset-size6 size3 mtight"},[e("span",{staticClass:"mord mathdefault mtight",staticStyle:{"margin-right":"0.05764em"}},[t._v("E")])])])]),e("span",{staticClass:"vlist-s"},[t._v("​")])]),e("span",{staticClass:"vlist-r"},[e("span",{staticClass:"vlist",staticStyle:{height:"0.15em"}},[e("span")])])])])])])])])])],1),t._v(" "),e("td",[t._v("movl %edx, %eax")])]),t._v(" "),e("tr",[e("td",[t._v("E[0]")]),t._v(" "),e("td",[t._v("int")]),t._v(" "),e("td",[e("eq",[e("span",{staticClass:"katex"},[e("span",{staticClass:"katex-mathml"},[e("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[e("semantics",[e("mrow",[e("mi",[t._v("M")]),e("mo",{attrs:{stretchy:"false"}},[t._v("[")]),e("msub",[e("mi",[t._v("x")]),e("mi",[t._v("E")])],1),e("mo",{attrs:{stretchy:"false"}},[t._v("]")])],1),e("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("M[x_E]")])],1)],1)],1),e("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[e("span",{staticClass:"base"},[e("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),e("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.10903em"}},[t._v("M")]),e("span",{staticClass:"mopen"},[t._v("[")]),e("span",{staticClass:"mord"},[e("span",{staticClass:"mord mathdefault"},[t._v("x")]),e("span",{staticClass:"msupsub"},[e("span",{staticClass:"vlist-t vlist-t2"},[e("span",{staticClass:"vlist-r"},[e("span",{staticClass:"vlist",staticStyle:{height:"0.32833099999999993em"}},[e("span",{staticStyle:{top:"-2.5500000000000003em","margin-left":"0em","margin-right":"0.05em"}},[e("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),e("span",{staticClass:"sizing reset-size6 size3 mtight"},[e("span",{staticClass:"mord mathdefault mtight",staticStyle:{"margin-right":"0.05764em"}},[t._v("E")])])])]),e("span",{staticClass:"vlist-s"},[t._v("​")])]),e("span",{staticClass:"vlist-r"},[e("span",{staticClass:"vlist",staticStyle:{height:"0.15em"}},[e("span")])])])])]),e("span",{staticClass:"mclose"},[t._v("]")])])])])])],1),t._v(" "),e("td",[t._v("movl (%edx), %eax")])]),t._v(" "),e("tr",[e("td",[t._v("E[i]")]),t._v(" "),e("td",[t._v("int")]),t._v(" "),e("td",[e("eq",[e("span",{staticClass:"katex"},[e("span",{staticClass:"katex-mathml"},[e("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[e("semantics",[e("mrow",[e("mi",[t._v("M")]),e("mo",{attrs:{stretchy:"false"}},[t._v("[")]),e("msub",[e("mi",[t._v("x")]),e("mi",[t._v("E")])],1),e("mo",[t._v("+")]),e("mn",[t._v("4")]),e("mi",[t._v("i")]),e("mo",{attrs:{stretchy:"false"}},[t._v("]")])],1),e("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("M[x_E+4i]")])],1)],1)],1),e("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[e("span",{staticClass:"base"},[e("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),e("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.10903em"}},[t._v("M")]),e("span",{staticClass:"mopen"},[t._v("[")]),e("span",{staticClass:"mord"},[e("span",{staticClass:"mord mathdefault"},[t._v("x")]),e("span",{staticClass:"msupsub"},[e("span",{staticClass:"vlist-t vlist-t2"},[e("span",{staticClass:"vlist-r"},[e("span",{staticClass:"vlist",staticStyle:{height:"0.32833099999999993em"}},[e("span",{staticStyle:{top:"-2.5500000000000003em","margin-left":"0em","margin-right":"0.05em"}},[e("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),e("span",{staticClass:"sizing reset-size6 size3 mtight"},[e("span",{staticClass:"mord mathdefault mtight",staticStyle:{"margin-right":"0.05764em"}},[t._v("E")])])])]),e("span",{staticClass:"vlist-s"},[t._v("​")])]),e("span",{staticClass:"vlist-r"},[e("span",{staticClass:"vlist",staticStyle:{height:"0.15em"}},[e("span")])])])])]),e("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}}),e("span",{staticClass:"mbin"},[t._v("+")]),e("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}})]),e("span",{staticClass:"base"},[e("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),e("span",{staticClass:"mord"},[t._v("4")]),e("span",{staticClass:"mord mathdefault"},[t._v("i")]),e("span",{staticClass:"mclose"},[t._v("]")])])])])])],1),t._v(" "),e("td",[t._v("movl (%edx, %ecx, 4) , %eax")])]),t._v(" "),e("tr",[e("td",[t._v("&E[2]")]),t._v(" "),e("td",[t._v("int *")]),t._v(" "),e("td",[e("eq",[e("span",{staticClass:"katex"},[e("span",{staticClass:"katex-mathml"},[e("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[e("semantics",[e("mrow",[e("msub",[e("mi",[t._v("x")]),e("mi",[t._v("E")])],1),e("mo",[t._v("+")]),e("mn",[t._v("8")])],1),e("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("x_E+8")])],1)],1)],1),e("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[e("span",{staticClass:"base"},[e("span",{staticClass:"strut",staticStyle:{height:"0.73333em","vertical-align":"-0.15em"}}),e("span",{staticClass:"mord"},[e("span",{staticClass:"mord mathdefault"},[t._v("x")]),e("span",{staticClass:"msupsub"},[e("span",{staticClass:"vlist-t vlist-t2"},[e("span",{staticClass:"vlist-r"},[e("span",{staticClass:"vlist",staticStyle:{height:"0.32833099999999993em"}},[e("span",{staticStyle:{top:"-2.5500000000000003em","margin-left":"0em","margin-right":"0.05em"}},[e("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),e("span",{staticClass:"sizing reset-size6 size3 mtight"},[e("span",{staticClass:"mord mathdefault mtight",staticStyle:{"margin-right":"0.05764em"}},[t._v("E")])])])]),e("span",{staticClass:"vlist-s"},[t._v("​")])]),e("span",{staticClass:"vlist-r"},[e("span",{staticClass:"vlist",staticStyle:{height:"0.15em"}},[e("span")])])])])]),e("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}}),e("span",{staticClass:"mbin"},[t._v("+")]),e("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}})]),e("span",{staticClass:"base"},[e("span",{staticClass:"strut",staticStyle:{height:"0.64444em","vertical-align":"0em"}}),e("span",{staticClass:"mord"},[t._v("8")])])])])])],1),t._v(" "),e("td",[t._v("leal 8(%edx), %eax")])]),t._v(" "),e("tr",[e("td",[t._v("E+i-1")]),t._v(" "),e("td",[t._v("int *")]),t._v(" "),e("td",[e("eq",[e("span",{staticClass:"katex"},[e("span",{staticClass:"katex-mathml"},[e("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[e("semantics",[e("mrow",[e("msub",[e("mi",[t._v("x")]),e("mi",[t._v("E")])],1),e("mo",[t._v("+")]),e("mn",[t._v("4")]),e("mi",[t._v("i")]),e("mo",[t._v("−")]),e("mn",[t._v("4")])],1),e("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("x_E+4i-4")])],1)],1)],1),e("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[e("span",{staticClass:"base"},[e("span",{staticClass:"strut",staticStyle:{height:"0.73333em","vertical-align":"-0.15em"}}),e("span",{staticClass:"mord"},[e("span",{staticClass:"mord mathdefault"},[t._v("x")]),e("span",{staticClass:"msupsub"},[e("span",{staticClass:"vlist-t vlist-t2"},[e("span",{staticClass:"vlist-r"},[e("span",{staticClass:"vlist",staticStyle:{height:"0.32833099999999993em"}},[e("span",{staticStyle:{top:"-2.5500000000000003em","margin-left":"0em","margin-right":"0.05em"}},[e("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),e("span",{staticClass:"sizing reset-size6 size3 mtight"},[e("span",{staticClass:"mord mathdefault mtight",staticStyle:{"margin-right":"0.05764em"}},[t._v("E")])])])]),e("span",{staticClass:"vlist-s"},[t._v("​")])]),e("span",{staticClass:"vlist-r"},[e("span",{staticClass:"vlist",staticStyle:{height:"0.15em"}},[e("span")])])])])]),e("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}}),e("span",{staticClass:"mbin"},[t._v("+")]),e("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}})]),e("span",{staticClass:"base"},[e("span",{staticClass:"strut",staticStyle:{height:"0.74285em","vertical-align":"-0.08333em"}}),e("span",{staticClass:"mord"},[t._v("4")]),e("span",{staticClass:"mord mathdefault"},[t._v("i")]),e("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}}),e("span",{staticClass:"mbin"},[t._v("−")]),e("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}})]),e("span",{staticClass:"base"},[e("span",{staticClass:"strut",staticStyle:{height:"0.64444em","vertical-align":"0em"}}),e("span",{staticClass:"mord"},[t._v("4")])])])])])],1),t._v(" "),e("td",[t._v("leal -4(%edx, %ecx, 4), %eax")])]),t._v(" "),e("tr",[e("td",[t._v("*(E + i - 3)")]),t._v(" "),e("td",[t._v("int *")]),t._v(" "),e("td",[e("eq",[e("span",{staticClass:"katex"},[e("span",{staticClass:"katex-mathml"},[e("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[e("semantics",[e("mrow",[e("mi",[t._v("M")]),e("mo",{attrs:{stretchy:"false"}},[t._v("(")]),e("msub",[e("mi",[t._v("x")]),e("mi",[t._v("E")])],1),e("mo",[t._v("+")]),e("mn",[t._v("4")]),e("mi",[t._v("i")]),e("mo",[t._v("−")]),e("mn",[t._v("12")]),e("mo",{attrs:{stretchy:"false"}},[t._v(")")])],1),e("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("M(x_E+4i-12)")])],1)],1)],1),e("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[e("span",{staticClass:"base"},[e("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),e("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.10903em"}},[t._v("M")]),e("span",{staticClass:"mopen"},[t._v("(")]),e("span",{staticClass:"mord"},[e("span",{staticClass:"mord mathdefault"},[t._v("x")]),e("span",{staticClass:"msupsub"},[e("span",{staticClass:"vlist-t vlist-t2"},[e("span",{staticClass:"vlist-r"},[e("span",{staticClass:"vlist",staticStyle:{height:"0.32833099999999993em"}},[e("span",{staticStyle:{top:"-2.5500000000000003em","margin-left":"0em","margin-right":"0.05em"}},[e("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),e("span",{staticClass:"sizing reset-size6 size3 mtight"},[e("span",{staticClass:"mord mathdefault mtight",staticStyle:{"margin-right":"0.05764em"}},[t._v("E")])])])]),e("span",{staticClass:"vlist-s"},[t._v("​")])]),e("span",{staticClass:"vlist-r"},[e("span",{staticClass:"vlist",staticStyle:{height:"0.15em"}},[e("span")])])])])]),e("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}}),e("span",{staticClass:"mbin"},[t._v("+")]),e("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}})]),e("span",{staticClass:"base"},[e("span",{staticClass:"strut",staticStyle:{height:"0.74285em","vertical-align":"-0.08333em"}}),e("span",{staticClass:"mord"},[t._v("4")]),e("span",{staticClass:"mord mathdefault"},[t._v("i")]),e("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}}),e("span",{staticClass:"mbin"},[t._v("−")]),e("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}})]),e("span",{staticClass:"base"},[e("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),e("span",{staticClass:"mord"},[t._v("1")]),e("span",{staticClass:"mord"},[t._v("2")]),e("span",{staticClass:"mclose"},[t._v(")")])])])])])],1),t._v(" "),e("td",[t._v("movl -12(%edx, %ecx, 4), %eax")])]),t._v(" "),e("tr",[e("td",[t._v("&E[i] - E")]),t._v(" "),e("td",[t._v("int")]),t._v(" "),e("td",[e("eq",[e("span",{staticClass:"katex"},[e("span",{staticClass:"katex-mathml"},[e("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[e("semantics",[e("mrow",[e("mi",[t._v("i")])],1),e("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("i")])],1)],1)],1),e("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[e("span",{staticClass:"base"},[e("span",{staticClass:"strut",staticStyle:{height:"0.65952em","vertical-align":"0em"}}),e("span",{staticClass:"mord mathdefault"},[t._v("i")])])])])])],1),t._v(" "),e("td",[t._v("movl %ecx, %eax")])])])]),t._v(" "),e("h3",{attrs:{id:"嵌套数组"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#嵌套数组"}},[t._v("#")]),t._v(" 嵌套数组")]),t._v(" "),e("p",[t._v("当我们创建数组的数组时，数组分配和引用的一般原则也是成立的。")]),t._v(" "),e("p",[t._v("要访问多维数组的元素，编译器会以数组起始为基地址，偏移量为索引，产生计算期望的元素的偏移量，然后使用某种 MOV 指令。通常来说，对于一个数组声明："),e("code",[t._v("T D[R][C]")]),t._v("，数组元素 D[i][j] 的存储器地址为  "),e("eq",[e("span",{staticClass:"katex"},[e("span",{staticClass:"katex-mathml"},[e("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[e("semantics",[e("mrow",[e("mi",{attrs:{mathvariant:"normal"}},[t._v("&")]),e("mi",[t._v("D")]),e("mo",{attrs:{stretchy:"false"}},[t._v("[")]),e("mi",[t._v("i")]),e("mo",{attrs:{stretchy:"false"}},[t._v("]")]),e("mo",{attrs:{stretchy:"false"}},[t._v("[")]),e("mi",[t._v("j")]),e("mo",{attrs:{stretchy:"false"}},[t._v("]")]),e("mo",[t._v("=")]),e("msub",[e("mi",[t._v("x")]),e("mi",[t._v("D")])],1),e("mo",[t._v("+")]),e("mi",[t._v("L")]),e("mo",{attrs:{stretchy:"false"}},[t._v("(")]),e("mi",[t._v("C")]),e("mo",{attrs:{separator:"true"}},[t._v("⋅")]),e("mi",[t._v("i")]),e("mo",[t._v("+")]),e("mi",[t._v("j")]),e("mo",{attrs:{stretchy:"false"}},[t._v(")")])],1),e("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("\\&D[i][j] = x_D+L(C·i + j)")])],1)],1)],1),e("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[e("span",{staticClass:"base"},[e("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),e("span",{staticClass:"mord"},[t._v("&")]),e("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.02778em"}},[t._v("D")]),e("span",{staticClass:"mopen"},[t._v("[")]),e("span",{staticClass:"mord mathdefault"},[t._v("i")]),e("span",{staticClass:"mclose"},[t._v("]")]),e("span",{staticClass:"mopen"},[t._v("[")]),e("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.05724em"}},[t._v("j")]),e("span",{staticClass:"mclose"},[t._v("]")]),e("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2777777777777778em"}}),e("span",{staticClass:"mrel"},[t._v("=")]),e("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2777777777777778em"}})]),e("span",{staticClass:"base"},[e("span",{staticClass:"strut",staticStyle:{height:"0.73333em","vertical-align":"-0.15em"}}),e("span",{staticClass:"mord"},[e("span",{staticClass:"mord mathdefault"},[t._v("x")]),e("span",{staticClass:"msupsub"},[e("span",{staticClass:"vlist-t vlist-t2"},[e("span",{staticClass:"vlist-r"},[e("span",{staticClass:"vlist",staticStyle:{height:"0.32833099999999993em"}},[e("span",{staticStyle:{top:"-2.5500000000000003em","margin-left":"0em","margin-right":"0.05em"}},[e("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),e("span",{staticClass:"sizing reset-size6 size3 mtight"},[e("span",{staticClass:"mord mathdefault mtight",staticStyle:{"margin-right":"0.02778em"}},[t._v("D")])])])]),e("span",{staticClass:"vlist-s"},[t._v("​")])]),e("span",{staticClass:"vlist-r"},[e("span",{staticClass:"vlist",staticStyle:{height:"0.15em"}},[e("span")])])])])]),e("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}}),e("span",{staticClass:"mbin"},[t._v("+")]),e("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}})]),e("span",{staticClass:"base"},[e("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),e("span",{staticClass:"mord mathdefault"},[t._v("L")]),e("span",{staticClass:"mopen"},[t._v("(")]),e("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.07153em"}},[t._v("C")]),e("span",{staticClass:"mpunct"},[t._v("⋅")]),e("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.16666666666666666em"}}),e("span",{staticClass:"mord mathdefault"},[t._v("i")]),e("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}}),e("span",{staticClass:"mbin"},[t._v("+")]),e("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}})]),e("span",{staticClass:"base"},[e("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),e("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.05724em"}},[t._v("j")]),e("span",{staticClass:"mclose"},[t._v(")")])])])])]),t._v("。")],1),t._v(" "),e("p",[t._v("这里，"),e("eq",[e("span",{staticClass:"katex"},[e("span",{staticClass:"katex-mathml"},[e("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[e("semantics",[e("mrow",[e("mi",[t._v("L")])],1),e("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("L")])],1)],1)],1),e("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[e("span",{staticClass:"base"},[e("span",{staticClass:"strut",staticStyle:{height:"0.68333em","vertical-align":"0em"}}),e("span",{staticClass:"mord mathdefault"},[t._v("L")])])])])]),t._v(" 是数据类型 T 以字节为单位的大小。")],1),t._v(" "),e("p",[t._v("作为一个示例，考虑的 "),e("eq",[e("span",{staticClass:"katex"},[e("span",{staticClass:"katex-mathml"},[e("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[e("semantics",[e("mrow",[e("mn",[t._v("5")]),e("mo",[t._v("×")]),e("mn",[t._v("3")])],1),e("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("5\\times 3")])],1)],1)],1),e("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[e("span",{staticClass:"base"},[e("span",{staticClass:"strut",staticStyle:{height:"0.72777em","vertical-align":"-0.08333em"}}),e("span",{staticClass:"mord"},[t._v("5")]),e("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}}),e("span",{staticClass:"mbin"},[t._v("×")]),e("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}})]),e("span",{staticClass:"base"},[e("span",{staticClass:"strut",staticStyle:{height:"0.64444em","vertical-align":"0em"}}),e("span",{staticClass:"mord"},[t._v("3")])])])])]),t._v(" 的整型数组 A。假设 "),e("eq",[e("span",{staticClass:"katex"},[e("span",{staticClass:"katex-mathml"},[e("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[e("semantics",[e("mrow",[e("msub",[e("mi",[t._v("x")]),e("mi",[t._v("A")])],1)],1),e("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("x_A")])],1)],1)],1),e("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[e("span",{staticClass:"base"},[e("span",{staticClass:"strut",staticStyle:{height:"0.58056em","vertical-align":"-0.15em"}}),e("span",{staticClass:"mord"},[e("span",{staticClass:"mord mathdefault"},[t._v("x")]),e("span",{staticClass:"msupsub"},[e("span",{staticClass:"vlist-t vlist-t2"},[e("span",{staticClass:"vlist-r"},[e("span",{staticClass:"vlist",staticStyle:{height:"0.32833099999999993em"}},[e("span",{staticStyle:{top:"-2.5500000000000003em","margin-left":"0em","margin-right":"0.05em"}},[e("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),e("span",{staticClass:"sizing reset-size6 size3 mtight"},[e("span",{staticClass:"mord mathdefault mtight"},[t._v("A")])])])]),e("span",{staticClass:"vlist-s"},[t._v("​")])]),e("span",{staticClass:"vlist-r"},[e("span",{staticClass:"vlist",staticStyle:{height:"0.15em"}},[e("span")])])])])])])])])]),t._v("、 "),e("eq",[e("span",{staticClass:"katex"},[e("span",{staticClass:"katex-mathml"},[e("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[e("semantics",[e("mrow",[e("mi",[t._v("i")])],1),e("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("i")])],1)],1)],1),e("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[e("span",{staticClass:"base"},[e("span",{staticClass:"strut",staticStyle:{height:"0.65952em","vertical-align":"0em"}}),e("span",{staticClass:"mord mathdefault"},[t._v("i")])])])])]),t._v(" 和 "),e("eq",[e("span",{staticClass:"katex"},[e("span",{staticClass:"katex-mathml"},[e("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[e("semantics",[e("mrow",[e("mi",[t._v("j")])],1),e("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("j")])],1)],1)],1),e("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[e("span",{staticClass:"base"},[e("span",{staticClass:"strut",staticStyle:{height:"0.85396em","vertical-align":"-0.19444em"}}),e("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.05724em"}},[t._v("j")])])])])]),t._v(" 分别位于相对于 %ebp 偏移量为 8 、 12 和 16 的地方。然后，可以用下面的代码将数组元素 A[i][j] 复制到寄存器 %eax 中：")],1),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("movl 12(%ebp), %eax\t\t\t\t# get i\nleal (%eax,%eax,2), %eax\t\t# compute 3 * i\nmovl 16(%ebp), %edx\t\t\t\t# get j\nsall $2, %edx\t\t\t\t\t# compute j * 4\naddl 8(%ebp), %edx\t\t\t\t# compute x_A + 4j\nmovl (%edx,%eax,4), %eax\t\t# Read from M[x_A + 4(j + 3i)]\n")])])]),e("h2",{attrs:{id:"_3-7-异质的数据结构"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-7-异质的数据结构"}},[t._v("#")]),t._v(" 3.7 异质的数据结构")]),t._v(" "),e("h3",{attrs:{id:"结构"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#结构"}},[t._v("#")]),t._v(" 结构")]),t._v(" "),e("p",[t._v("C 语言的 struct 声明创建一个数据类型，将可能不同类型的对象聚合到一个对象中。结构的各个组成部分用名字来引用。结构的所有组成部分都存放在存储器中一段连续的区城内，而指向结构的指针就是结构第一个字节的地址。编译器维护关于每个结构类型的信息，指示每个字段 (field) 的字节偏移。它以这些偏移作为存储器引用指令中的位移，从而产生对结构元素的引用。")]),t._v(" "),e("p",[t._v("举例：")]),t._v(" "),e("div",{staticClass:"language-c extra-class"},[e("pre",{pre:!0,attrs:{class:"language-c"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("rec")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" j"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("p"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("这个结构有4 个字段 —— 2 个 4 字节 int、1 个由 3 个 4 字节 int 组成的数组和 1 个 4 字节的整型指针，总共是 24 个字节：")]),t._v(" "),e("p",[e("img",{attrs:{src:a(551),alt:"image-20220608164852075"}})]),t._v(" "),e("p",[t._v("为访问结构的字段，编译器产生的代码要将结构的地址加上适当的偏移。例如，假设 "),e("code",[t._v("struct rec*")]),t._v(" 类型的变量 r 放在寄存器 %edx 中。然后，下面的代码将元素 "),e("code",[t._v("r->i")]),t._v(" 复制到元素 "),e("code",[t._v("r->j")]),t._v("：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("movl \t(%edx), %eax\t\t\t# get r -> i\nmovl\t%eax, 4(%edx) \t\t\t# store in r -> j\n")])])]),e("p",[t._v("要产生一个指向结构内部对象的指针，我们只需将结构的地址加上该字段的偏移量。例如，只要加上偏移量 "),e("eq",[e("span",{staticClass:"katex"},[e("span",{staticClass:"katex-mathml"},[e("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[e("semantics",[e("mrow",[e("mn",[t._v("8")]),e("mo",[t._v("+")]),e("mn",[t._v("4")]),e("mo",[t._v("×")]),e("mn",[t._v("1")])],1),e("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("8+4\\times 1")])],1)],1)],1),e("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[e("span",{staticClass:"base"},[e("span",{staticClass:"strut",staticStyle:{height:"0.72777em","vertical-align":"-0.08333em"}}),e("span",{staticClass:"mord"},[t._v("8")]),e("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}}),e("span",{staticClass:"mbin"},[t._v("+")]),e("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}})]),e("span",{staticClass:"base"},[e("span",{staticClass:"strut",staticStyle:{height:"0.72777em","vertical-align":"-0.08333em"}}),e("span",{staticClass:"mord"},[t._v("4")]),e("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}}),e("span",{staticClass:"mbin"},[t._v("×")]),e("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}})]),e("span",{staticClass:"base"},[e("span",{staticClass:"strut",staticStyle:{height:"0.64444em","vertical-align":"0em"}}),e("span",{staticClass:"mord"},[t._v("1")])])])])]),t._v("，就可以得到指针 "),e("code",[t._v("&(r->a[i])")]),t._v("。对于在寄存器 %edx 中的指针 r 和在寄存器 %eax 中的整数变量 i，我们可以用一条指令产生指针 "),e("code",[t._v("&(r->a[i])")]),t._v(" 的值：")],1),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("leal \t8(%edx,%eax,4), %eax\t# set %eax to &r->a[i]\n")])])]),e("p",[t._v("再举一个例子，下面的代码实现的是语句："),e("code",[t._v("r->p = &r->a[r->i + r->j]")])]),t._v(" "),e("p",[t._v("开始时 r 在寄存器 %edx 中：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("movl \t4(%edx), %eax \t\t\t# get r->j\naddl \t(%edx), %eax \t\t\t# add r->i\nleal \t8(%edx,%eax,4), %eax \t# compute &r->a[r->i + r->j]\nmovl \t%eax, 20(%edx) \t\t\t# store in r->p\n")])])]),e("p",[t._v("综上，结构的各个字段的选取完全是在编译时处理的。机器代码不包含关于字段声明或字段名字的信息。")]),t._v(" "),e("h3",{attrs:{id:"联合"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#联合"}},[t._v("#")]),t._v(" 联合")]),t._v(" "),e("p",[t._v("联合提供了一种方式，能够规避 C 语言的类型系统，允许以多种类型来引用一个对象。联合声明的语法与结构的语法一样，只不过语义相差比较大。它们是用不同的字段来引用相同的存储器块。")]),t._v(" "),e("p",[t._v("当用联合将各种不同大小的数据类型结合到一起时，字节顺序问题就变得很重要了。例如，假设我们写了一个过程，它以两个 4 字节的 unsigned 的位的形式，创建一个 8 字节的 double:")]),t._v(" "),e("div",{staticClass:"language-c extra-class"},[e("pre",{pre:!0,attrs:{class:"language-c"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("bit2double")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unsigned")]),t._v(" wordO"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unsigned")]),t._v(" word1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("union")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" d"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unsigned")]),t._v(" u"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" temp"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    temp"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("u"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" wordO"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    temp"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("u"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" word1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" temp"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("d"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("在 IA32 这样的小端法机器上，参数 word0 是 d 的低位 4 个字节，而 word1 是高位 4 个字节。在大端法机器上，这两个参数的角色刚好相反。")]),t._v(" "),e("h3",{attrs:{id:"数据对齐"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数据对齐"}},[t._v("#")]),t._v(" 数据对齐")]),t._v(" "),e("p",[t._v("许多计算机系统对基本数据类型合法地址做了一些限制，要求某种类型对象的地址必须是某个值 "),e("eq",[e("span",{staticClass:"katex"},[e("span",{staticClass:"katex-mathml"},[e("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[e("semantics",[e("mrow",[e("mi",[t._v("K")])],1),e("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("K")])],1)],1)],1),e("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[e("span",{staticClass:"base"},[e("span",{staticClass:"strut",staticStyle:{height:"0.68333em","vertical-align":"0em"}}),e("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.07153em"}},[t._v("K")])])])])]),t._v("（通常是 2、 4 或 8）的倍数。这种对齐限制简化了形成处理器和存储器系统之间接口的硬件设计。例如，假设一个处理器总是从存储器中取出 8 个字节，则地址必须为 8 的倍数。如果我们能保证将所有的 double 类型数据的地址对齐成 8 的倍数，那么就可以用一个存储器操作来读或者写值了。否则，我们可能需要执行两次存储器访问，因为对象可能被分放在两个 8 字节存储器块中。")],1),t._v(" "),e("p",[t._v("Linux 沿用的对齐策略是， 2 字节数据类型（例如 short）的地址必须是 2 的倍数，而较大的数据类型（例如 int 、int* 、float 和 double）的地址必须是 4 的倍数。注意，这意味着一个 short 类型对象的地址最低位必须等于 0。类似地，任何 int 类型的对象或指针的地址的最低两位必须都是 0 。")]),t._v(" "),e("p",[t._v("分配存储器的库例程（例如 malloc）的设计必须使它们返回的指针满足运行机器最糟糕情况的对齐限制，通常是 4 或者 8。对于包含结构的代码，编译器可能需要在字段的分配中插入间隙，以保证每个结构元素都满足它的对齐要求。而结构本身对它的起始地址也有一些对齐要求。")]),t._v(" "),e("p",[t._v("比如说，考虑下面的结构声明：")]),t._v(" "),e("div",{staticClass:"language-c extra-class"},[e("pre",{pre:!0,attrs:{class:"language-c"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("S1")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" c"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" j"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("为了满足 i 和  j 的 4 字节对齐要求。编译器在字段 c 和 j 之间插入一个 3 字节的间隙（用阴影表示）：")]),t._v(" "),e("p",[e("img",{attrs:{src:a(552),alt:"image-20220609164620905"}})]),t._v(" "),e("p",[t._v("结果， j 的偏移量为 8，而整个结构的大小为 12 字节。此外，编译器必须保证任何 "),e("code",[t._v("struct S1*")]),t._v(" 类型的指针 p 都满足 4 字节对齐。指针 p 的值 "),e("eq",[e("span",{staticClass:"katex"},[e("span",{staticClass:"katex-mathml"},[e("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[e("semantics",[e("mrow",[e("msub",[e("mi",[t._v("x")]),e("mi",[t._v("p")])],1)],1),e("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("x_p")])],1)],1)],1),e("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[e("span",{staticClass:"base"},[e("span",{staticClass:"strut",staticStyle:{height:"0.716668em","vertical-align":"-0.286108em"}}),e("span",{staticClass:"mord"},[e("span",{staticClass:"mord mathdefault"},[t._v("x")]),e("span",{staticClass:"msupsub"},[e("span",{staticClass:"vlist-t vlist-t2"},[e("span",{staticClass:"vlist-r"},[e("span",{staticClass:"vlist",staticStyle:{height:"0.15139200000000003em"}},[e("span",{staticStyle:{top:"-2.5500000000000003em","margin-left":"0em","margin-right":"0.05em"}},[e("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),e("span",{staticClass:"sizing reset-size6 size3 mtight"},[e("span",{staticClass:"mord mathdefault mtight"},[t._v("p")])])])]),e("span",{staticClass:"vlist-s"},[t._v("​")])]),e("span",{staticClass:"vlist-r"},[e("span",{staticClass:"vlist",staticStyle:{height:"0.286108em"}},[e("span")])])])])])])])])]),t._v(" 必须是 4 的倍数。这保证了 "),e("code",[t._v("p->i")]),t._v(" (地址 "),e("eq",[e("span",{staticClass:"katex"},[e("span",{staticClass:"katex-mathml"},[e("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[e("semantics",[e("mrow",[e("msub",[e("mi",[t._v("x")]),e("mi",[t._v("p")])],1)],1),e("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("x_p")])],1)],1)],1),e("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[e("span",{staticClass:"base"},[e("span",{staticClass:"strut",staticStyle:{height:"0.716668em","vertical-align":"-0.286108em"}}),e("span",{staticClass:"mord"},[e("span",{staticClass:"mord mathdefault"},[t._v("x")]),e("span",{staticClass:"msupsub"},[e("span",{staticClass:"vlist-t vlist-t2"},[e("span",{staticClass:"vlist-r"},[e("span",{staticClass:"vlist",staticStyle:{height:"0.15139200000000003em"}},[e("span",{staticStyle:{top:"-2.5500000000000003em","margin-left":"0em","margin-right":"0.05em"}},[e("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),e("span",{staticClass:"sizing reset-size6 size3 mtight"},[e("span",{staticClass:"mord mathdefault mtight"},[t._v("p")])])])]),e("span",{staticClass:"vlist-s"},[t._v("​")])]),e("span",{staticClass:"vlist-r"},[e("span",{staticClass:"vlist",staticStyle:{height:"0.286108em"}},[e("span")])])])])])])])])]),t._v("）和 "),e("code",[t._v("p->j")]),t._v(" (地址 "),e("eq",[e("span",{staticClass:"katex"},[e("span",{staticClass:"katex-mathml"},[e("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[e("semantics",[e("mrow",[e("msub",[e("mi",[t._v("x")]),e("mi",[t._v("p")])],1),e("mo",[t._v("+")]),e("mn",[t._v("8")])],1),e("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("x_p+8")])],1)],1)],1),e("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[e("span",{staticClass:"base"},[e("span",{staticClass:"strut",staticStyle:{height:"0.8694379999999999em","vertical-align":"-0.286108em"}}),e("span",{staticClass:"mord"},[e("span",{staticClass:"mord mathdefault"},[t._v("x")]),e("span",{staticClass:"msupsub"},[e("span",{staticClass:"vlist-t vlist-t2"},[e("span",{staticClass:"vlist-r"},[e("span",{staticClass:"vlist",staticStyle:{height:"0.15139200000000003em"}},[e("span",{staticStyle:{top:"-2.5500000000000003em","margin-left":"0em","margin-right":"0.05em"}},[e("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),e("span",{staticClass:"sizing reset-size6 size3 mtight"},[e("span",{staticClass:"mord mathdefault mtight"},[t._v("p")])])])]),e("span",{staticClass:"vlist-s"},[t._v("​")])]),e("span",{staticClass:"vlist-r"},[e("span",{staticClass:"vlist",staticStyle:{height:"0.286108em"}},[e("span")])])])])]),e("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}}),e("span",{staticClass:"mbin"},[t._v("+")]),e("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}})]),e("span",{staticClass:"base"},[e("span",{staticClass:"strut",staticStyle:{height:"0.64444em","vertical-align":"0em"}}),e("span",{staticClass:"mord"},[t._v("8")])])])])]),t._v("）都满足它们的 4 字节对齐要求。")],1),t._v(" "),e("p",[t._v("另外，编译器结构的末尾可能需要一些填充，这样结构数组中的每个元素都会满足它的对齐要求。")])])}),[],!1,null,null,null);s.default=n.exports}}]);