(window.webpackJsonp=window.webpackJsonp||[]).push([[74],{595:function(_,v,t){_.exports=t.p+"assets/img/image-20240122222705723.5093780c.png"},996:function(_,v,t){"use strict";t.r(v);var s=t(14),r=Object(s.a)({},(function(){var _=this,v=_.$createElement,s=_._self._c||v;return s("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[s("h1",{attrs:{id:"第7章-数据库设计"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第7章-数据库设计"}},[_._v("#")]),_._v(" 第7章 数据库设计")]),_._v(" "),s("h2",{attrs:{id:"_7-1-数据库设计概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-数据库设计概述"}},[_._v("#")]),_._v(" 7.1 数据库设计概述")]),_._v(" "),s("h3",{attrs:{id:"数据库设计的基本步骤"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据库设计的基本步骤"}},[_._v("#")]),_._v(" 数据库设计的基本步骤")]),_._v(" "),s("p",[_._v("数据库设计分 6 个阶段：")]),_._v(" "),s("ul",[s("li",[_._v("需求分析")]),_._v(" "),s("li",[_._v("概念结构设计：通过对用户需求进行综合、归纳与抽象，"),s("strong",[_._v("形成一个独立于具体数据库管理系统的概念模型")]),_._v("。")]),_._v(" "),s("li",[_._v("逻辑结构设计："),s("strong",[_._v("将概念结构转换为某个数据库管理系统所支持的数据模型")]),_._v("，并对其进行优化。")]),_._v(" "),s("li",[_._v("物理结构设计：为逻辑数据结构选取一个最适合应用环境的物理结构。")]),_._v(" "),s("li",[_._v("数据库实施：根据逻辑设计和物理设计的结果构建数据库。")]),_._v(" "),s("li",[_._v("数据库运行和维护")])]),_._v(" "),s("h3",{attrs:{id:"数据库设计过程中的各级模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据库设计过程中的各级模式"}},[_._v("#")]),_._v(" 数据库设计过程中的各级模式")]),_._v(" "),s("p",[s("img",{attrs:{src:t(595),alt:"image-20240122222705723"}})]),_._v(" "),s("h2",{attrs:{id:"_7-2-需求分析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-2-需求分析"}},[_._v("#")]),_._v(" 7.2 需求分析")]),_._v(" "),s("h3",{attrs:{id:"需求分析的任务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#需求分析的任务"}},[_._v("#")]),_._v(" 需求分析的任务")]),_._v(" "),s("p",[_._v("调查的重点是 “数据” 和 “处理”，获得用户对数据库的要求：")]),_._v(" "),s("ul",[s("li",[_._v("信息要求")]),_._v(" "),s("li",[_._v("处理要求")]),_._v(" "),s("li",[_._v("安全性与完整性要求")])]),_._v(" "),s("h3",{attrs:{id:"需求分析的方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#需求分析的方法"}},[_._v("#")]),_._v(" 需求分析的方法")]),_._v(" "),s("ul",[s("li",[_._v("调查清楚用户的实际需求并进行初步分析")]),_._v(" "),s("li",[_._v("与用户达成共识")]),_._v(" "),s("li",[_._v("分析与表达这些需求")])]),_._v(" "),s("h3",{attrs:{id:"数据字典"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据字典"}},[_._v("#")]),_._v(" 数据字典")]),_._v(" "),s("p",[_._v("数据字典是关于数据库中 "),s("strong",[_._v("数据的描述")]),_._v("，即 "),s("strong",[_._v("元数据")]),_._v("，不是数据本身。")]),_._v(" "),s("p",[_._v("数据字典的内容：")]),_._v(" "),s("ul",[s("li",[_._v("数据项： 不可再分的数据单位；")]),_._v(" "),s("li",[_._v("数据结构：反映了数据之间的组合关系；")]),_._v(" "),s("li",[_._v("数据流：数据结构在系统内传输的路径；")]),_._v(" "),s("li",[_._v("数据存储：数据结构停留或保存的地方，也是数据流的来源和去向之一；")]),_._v(" "),s("li",[_._v("处理过程")])]),_._v(" "),s("p",[s("strong",[_._v("数据字典的作用："),s("strong",[_._v("数据字典是 "),s("strong",[_._v("关于数据库中数据的描述")]),_._v("，在需求分析阶段建立，是下一步进行")]),_._v("概念设计的基础")]),_._v("，并在数据库设计过程中不断修改、充实和完善。")]),_._v(" "),s("h2",{attrs:{id:"_7-3-概念结构设计"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-3-概念结构设计"}},[_._v("#")]),_._v(" 7.3 概念结构设计")]),_._v(" "),s("h3",{attrs:{id:"概念模型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#概念模型"}},[_._v("#")]),_._v(" 概念模型")]),_._v(" "),s("p",[_._v("将需求分析得到的用户需求抽象为信息结构（即概念模型）的过程就是概念结构设计。")]),_._v(" "),s("p",[s("strong",[_._v("概念模型的特点：")])]),_._v(" "),s("ul",[s("li",[_._v("能真实、充分地反映现实世界，是现实世界的一个真实模型；")]),_._v(" "),s("li",[_._v("易于理解，从而可以用它和不熟悉计算机的用户交换意见；")]),_._v(" "),s("li",[_._v("易于更改，当应用环境和应用要求改变时，容易对概念模型修改和扩充；")]),_._v(" "),s("li",[_._v("易于向关系、网状、层次等各种数据模型转换。")])]),_._v(" "),s("h3",{attrs:{id:"e-r-模型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#e-r-模型"}},[_._v("#")]),_._v(" E-R 模型")]),_._v(" "),s("p",[_._v("实体-联系图（E-R 图）：描述实体型、属性和联系的一种方法，其中：")]),_._v(" "),s("ul",[s("li",[_._v("实体型用矩形表示，矩形框内写明实体名。")]),_._v(" "),s("li",[_._v("属性用椭圆形表示，并用无向边将其与相应的实体型连接起来。")]),_._v(" "),s("li",[_._v("联系用菱形表示，菱形框内写明联系名，并用无向边分别与有关实体连接起来，同时在无向边旁标上联系的类型（1:1、1:n 或 m:n）。")])]),_._v(" "),s("h3",{attrs:{id:"概念结构设计"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#概念结构设计"}},[_._v("#")]),_._v(" 概念结构设计")]),_._v(" "),s("p",[_._v("将事物作为属性的基本准则：")]),_._v(" "),s("ul",[s("li",[_._v("作为属性，"),s("strong",[_._v("不能再具有需要描述的性质")]),_._v("，属性必须是不可分的数据项，不能包含其他属性；")]),_._v(" "),s("li",[_._v("属性"),s("strong",[_._v("不能与其他实体具有联系")]),_._v("，即E-R图中所表示的联系是实体之间的联系。")])]),_._v(" "),s("h2",{attrs:{id:"_7-4-逻辑结构设计"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-4-逻辑结构设计"}},[_._v("#")]),_._v(" 7.4 逻辑结构设计")]),_._v(" "),s("p",[_._v("数据库的逻辑结构设计就是把概念结构设计阶段设计好的基本 E-R 图转换为与选用的 DBMS 产品所支持的数据模型相符合的 "),s("strong",[_._v("逻辑结构")]),_._v("。")]),_._v(" "),s("h3",{attrs:{id:"e-r-图向关系模型的转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#e-r-图向关系模型的转换"}},[_._v("#")]),_._v(" E-R 图向关系模型的转换")]),_._v(" "),s("p",[_._v("一个 "),s("strong",[_._v("实体型")]),_._v(" 转换为一个关系模式。")]),_._v(" "),s("p",[s("strong",[_._v("处理实体型间的联系：")])]),_._v(" "),s("ul",[s("li",[_._v("一个 1:1 联系可以转换为 "),s("strong",[_._v("一个独立的关系模式")]),_._v("，也可以与 "),s("strong",[_._v("任意一端")]),_._v(" 对应的关系模式合并；")]),_._v(" "),s("li",[_._v("一个 1:n 联系可以转换为 "),s("strong",[_._v("一个独立的关系模式")]),_._v("，也可以与 "),s("strong",[_._v("n 端")]),_._v(" 对应的关系模式合并；")]),_._v(" "),s("li",[_._v("一个 m:n 联系可以转换为 "),s("strong",[_._v("一个关系模式")]),_._v("；")]),_._v(" "),s("li",[_._v("3 个或 3 个以上实体间的一个多元联系可以转换为 "),s("strong",[_._v("一个关系模式")]),_._v("；")]),_._v(" "),s("li",[_._v("具有相同码的关系模式可合并。")])]),_._v(" "),s("h3",{attrs:{id:"数据模型的优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据模型的优化"}},[_._v("#")]),_._v(" 数据模型的优化")]),_._v(" "),s("p",[_._v("关系数据模型的优化通常以规范化理论为指导。")]),_._v(" "),s("ul",[s("li",[_._v("确定数据依赖")]),_._v(" "),s("li",[_._v("对于各个关系模式之间的数据依赖进行极小化处理，消除冗余的联系。")])]),_._v(" "),s("p",[_._v("并不是规范化程度越高的关系就越优：")]),_._v(" "),s("ul",[s("li",[_._v("连接运算的代价是相当高的")])]),_._v(" "),s("h3",{attrs:{id:"设计用户子模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#设计用户子模式"}},[_._v("#")]),_._v(" 设计用户子模式")]),_._v(" "),s("p",[_._v("使用 "),s("strong",[_._v("视图机制")]),_._v(" 简化用户对系统的使用、保证系统的安全性。")]),_._v(" "),s("h2",{attrs:{id:"_7-5-物理结构设计"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-5-物理结构设计"}},[_._v("#")]),_._v(" 7.5 物理结构设计")]),_._v(" "),s("p",[_._v("数据库在物理设备上的 "),s("strong",[_._v("存储结构与存取方法")]),_._v(" 称为数据库的物理结构，它依赖于给定的DBMS。为一个给定的逻辑数据模型选取一个最适合应用要求的 "),s("strong",[_._v("物理结构")]),_._v("，就是数据库的物理设计的主要内容。")]),_._v(" "),s("p",[_._v("数据库的物理设计步骤通常分为两步：")]),_._v(" "),s("ul",[s("li",[_._v("确定数据库的物理结构，在关系数据库中主要指 "),s("strong",[_._v("存取方法和存储结构")]),_._v("；")]),_._v(" "),s("li",[_._v("对物理结构进行评价，评价的重点是时间和空间效率。")])]),_._v(" "),s("h3",{attrs:{id:"关系模式存取方法选择"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关系模式存取方法选择"}},[_._v("#")]),_._v(" 关系模式存取方法选择")]),_._v(" "),s("p",[s("strong",[_._v("B+ 树索引存取方法：")])]),_._v(" "),s("ul",[s("li",[_._v("如果一个（或一组）属性 "),s("strong",[_._v("经常在查询条件中出现")]),_._v("，则考虑在这个（或这组）属性上建立索引（或组合索引）；")]),_._v(" "),s("li",[_._v("如果一个属性 "),s("strong",[_._v("经常作为最大值和最小值等聚集函数的参数")]),_._v("，则考虑在这个属性上建立索引；")]),_._v(" "),s("li",[_._v("如果一个（或一组）属性 "),s("strong",[_._v("经常在连接操作的连接条件中出现")]),_._v("，则考虑在这个（或这组）属性上建立索引。")])]),_._v(" "),s("p",[s("strong",[_._v("Hash 索引存取方法")]),_._v("：如果一个关系的属性 "),s("strong",[_._v("主要出现在等值连接条件中")]),_._v(" 或 "),s("strong",[_._v("主要出现在等值比较选择条件中")]),_._v("。")]),_._v(" "),s("p",[s("strong",[_._v("聚簇存取方法")]),_._v("：当 "),s("strong",[_._v("通过聚簇码进行访问或连接")]),_._v(" 是该关系的主要应用，与聚簇码无关的其他访问很少或者是次要的时，可以使用聚簇。")]),_._v(" "),s("h3",{attrs:{id:"确定数据库的存储结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#确定数据库的存储结构"}},[_._v("#")]),_._v(" 确定数据库的存储结构")]),_._v(" "),s("p",[_._v("确定数据库物理结构主要指确定数据的 "),s("strong",[_._v("存放位置")]),_._v(" 和 "),s("strong",[_._v("存储结构")]),_._v("，包括：确定关系、索引、聚簇、日志、备份等的存储安排和存储结构，确定系统配置等。")]),_._v(" "),s("p",[_._v("确定数据的存放位置和存储结构要综合考虑 "),s("strong",[_._v("存取时间")]),_._v("、"),s("strong",[_._v("存储空间利用率")]),_._v(" 和 "),s("strong",[_._v("维护代价")]),_._v(" 3 个方面的因素。")]),_._v(" "),s("h2",{attrs:{id:"_7-6-数据库的实施和维护"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-6-数据库的实施和维护"}},[_._v("#")]),_._v(" 7.6 数据库的实施和维护")]),_._v(" "),s("h3",{attrs:{id:"实施"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实施"}},[_._v("#")]),_._v(" 实施")]),_._v(" "),s("p",[_._v("数据库是用来对数据进行存储、管理与应用的，因此在实施阶段必须将原有系统中的历史数据输入到数据库。数据量一般都很大，而且数据来源于部门中的各个不同的单位。数据的组织方式、结构和格式都与新设计的数据库系统有相当的差距，组织数据录入就要将各类源数据从各个局部应用中抽取出来，分类转换，最后综合成符合新设计的数据库结构的形式，输入数据库。因此这样的 "),s("strong",[_._v("数据转换、组织入库的工作是相当费力费时的")]),_._v("。特别是原系统是手工数据处理系统时，各类数据分散在各种不同的原始表格、凭证、单据之中，数据输入工作量更大。")]),_._v(" "),s("p",[_._v("保证输入数据正确性的方法：为提高数据输入工作的效率和质量，应该针对具体的应用环境设计一个 "),s("strong",[_._v("数据录入子系统")]),_._v("，由计算机来完成数据入库的任务。 在源数据入库之前要采用多种方法对它们进行 "),s("strong",[_._v("检验")]),_._v("，以防止不正确的数据入库。")]),_._v(" "),s("h3",{attrs:{id:"维护"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#维护"}},[_._v("#")]),_._v(" 维护")]),_._v(" "),s("p",[s("strong",[_._v("据库的重组织与重构造")]),_._v("：")]),_._v(" "),s("ul",[s("li",[s("strong",[_._v("数据库的再组织")]),_._v(" 是指按原设计要求 "),s("strong",[_._v("重新安排存储位置、回收垃圾、减少指针链")]),_._v(" 等，以提高系统性能。")]),_._v(" "),s("li",[s("strong",[_._v("数据库的重构造")]),_._v(" 则是指部分 "),s("strong",[_._v("修改数据库的模式和内模式")]),_._v("，即修改原设计的逻辑和物理结构。数据库的再组织是不修改数据库的模式和内模式的。")])]),_._v(" "),s("p",[s("strong",[_._v("进行数据库的再组织和重构造的原因：")])]),_._v(" "),s("ul",[s("li",[_._v("数据库运行一段时间后，由于记录不断增、删、改，会使数据库的 "),s("strong",[_._v("物理存储情况变坏，降低了数据的存取效率，数据库性能下降")]),_._v("，这时 DBA 就要对数据库进行再组织。")]),_._v(" "),s("li",[_._v("数据库应用环境常常发生变化，如增加新的应用或新的实体，取消了某些应用，有的实体与实体间的联系也发生了变化等，使 "),s("strong",[_._v("原有的数据库设计不能满足新的需求，需要调整数据库的模式和内模式")]),_._v("。这就要进行数据库重构造。")])])])}),[],!1,null,null,null);v.default=r.exports}}]);