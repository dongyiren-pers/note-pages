(window.webpackJsonp=window.webpackJsonp||[]).push([[108],{990:function(_,v,t){"use strict";t.r(v);var s=t(14),r=Object(s.a)({},(function(){var _=this,v=_.$createElement,t=_._self._c||v;return t("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[t("h1",{attrs:{id:"第1章-绪论"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第1章-绪论"}},[_._v("#")]),_._v(" 第1章 绪论")]),_._v(" "),t("h2",{attrs:{id:"_1-1-数据库系统概述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-数据库系统概述"}},[_._v("#")]),_._v(" 1.1 数据库系统概述")]),_._v(" "),t("h3",{attrs:{id:"数据库的-4-个基本概念"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据库的-4-个基本概念"}},[_._v("#")]),_._v(" 数据库的 4 个基本概念")]),_._v(" "),t("p",[t("strong",[_._v("数据")]),_._v(" 是荷载信息的物理符号/描述事物的符号记录。")]),_._v(" "),t("p",[t("strong",[_._v("数据库")]),_._v(" 是 "),t("strong",[_._v("长期储存")]),_._v(" 在计算机内，"),t("strong",[_._v("有组织、可共享")]),_._v(" 的 "),t("strong",[_._v("大量")]),_._v(" 数据的集合。")]),_._v(" "),t("p",[t("strong",[_._v("数据库管理系统")]),_._v(" 是对共享数据有效的组织、存储、管理和存取的 "),t("strong",[_._v("系统软件")]),_._v("。")]),_._v(" "),t("p",[t("strong",[_._v("数据库系统")]),_._v(" 是由 "),t("strong",[_._v("数据库 DB")]),_._v("、"),t("strong",[_._v("数据库管理系统 DBMS")]),_._v("、"),t("strong",[_._v("应用程序")]),_._v(" 和 "),t("strong",[_._v("数据库管理员 DBA")]),_._v(" 组成的存储、管理、处理和维护数据的系统。")]),_._v(" "),t("h3",{attrs:{id:"数据管理技术的产生和发展"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据管理技术的产生和发展"}},[_._v("#")]),_._v(" 数据管理技术的产生和发展")]),_._v(" "),t("ul",[t("li",[_._v("人工管理阶段：20 世纪 50 年代中之前")]),_._v(" "),t("li",[_._v("文件系统阶段：20世纪50年代末 ~ 60年代中")]),_._v(" "),t("li",[_._v("数据库系统阶段：20世纪60年代末 ~ 现在")])]),_._v(" "),t("p",[t("strong",[_._v("文件系统与数据库系统的区别：")])]),_._v(" "),t("ul",[t("li",[_._v("文件系统的数据是 "),t("strong",[_._v("面向某一应用的")]),_._v("，文件的 "),t("strong",[_._v("共享性差、冗余度大，独立性差")]),_._v("，文件的记录虽然是有结构的，但是整体无结构。所谓“数据面向某个应用”是指数据结构是针对某个应用设计的，只被这个应用程序或应用系统使用，数据是某个应用的“私有资源”。")]),_._v(" "),t("li",[_._v("数据库系统中的数据是 "),t("strong",[_._v("面向整个组织或企业")]),_._v("。数据的 "),t("strong",[_._v("共享性高、冗余度小，具有高度的物理独立性和一定的逻辑独立性")]),_._v("，数据库中的数据用数据模型组织和描述，由数据库管理系统提供数据 "),t("strong",[_._v("安全性、完整性、并发控制和恢复能力")]),_._v("。")])]),_._v(" "),t("p",[t("strong",[_._v("文件系统与数据库系统的联系：")])]),_._v(" "),t("ul",[t("li",[_._v("文件系统与数据库系统都是计算机系统中管理数据的软件。")]),_._v(" "),t("li",[_._v("文件系统是操作系统的重要组成部分，而 DBMS 是独立于操作系统的软件。DBMS 是在操作系统的基础上实现的，数据库中数据的组织和存储是通过操作系统中文件系统来实现的。数据库实现的基础是文件，对数据库的任何操作最终要转化为对文件的操作。")])]),_._v(" "),t("h3",{attrs:{id:"数据库系统的特点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据库系统的特点"}},[_._v("#")]),_._v(" 数据库系统的特点")]),_._v(" "),t("ul",[t("li",[_._v("数据 "),t("strong",[_._v("结构化")]),_._v("。")]),_._v(" "),t("li",[_._v("数据的 "),t("strong",[_._v("共享性高，冗余度低")]),_._v("，易扩充。")]),_._v(" "),t("li",[_._v("数据 "),t("strong",[_._v("独立性高")]),_._v("。数据独立性包括数据的物理独立性和数据的逻辑独立性。")]),_._v(" "),t("li",[_._v("数据由 DBMS 统一管理和控制。由 DBMS 提供 "),t("strong",[_._v("数据安全性、完整性、并发控制和恢复能力")]),_._v("。")])]),_._v(" "),t("h2",{attrs:{id:"_1-2-数据模型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-数据模型"}},[_._v("#")]),_._v(" 1.2  数据模型")]),_._v(" "),t("p",[_._v("数据模型是数据库中用来 "),t("strong",[_._v("对现实世界进行抽象的工具")]),_._v("。")]),_._v(" "),t("p",[_._v("数据模型通常由 "),t("strong",[_._v("数据结构")]),_._v("、"),t("strong",[_._v("数据操作")]),_._v(" 和 "),t("strong",[_._v("完整性约束")]),_._v(" 三部分组成。")]),_._v(" "),t("h3",{attrs:{id:"概念模型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#概念模型"}},[_._v("#")]),_._v(" 概念模型")]),_._v(" "),t("p",[_._v("概念模型是 "),t("strong",[_._v("现实世界到机器世界的一个中间层次")]),_._v("。"),t("strong",[_._v("概念模型用于信息世界的建模")]),_._v("，是数据库设计人员进行数据库设计的有力工具，也是数据库设计人员和用户之间进行交流的语言。")]),_._v(" "),t("p",[_._v("概念模型的一种表示方法："),t("strong",[_._v("实体-联系方法")]),_._v("。")]),_._v(" "),t("div",{staticClass:"anchor",attrs:{id:"概念模型中术语"}},[_._v("概念模型中术语")]),t("ul",[t("li",[t("strong",[_._v("实体")]),_._v("：客观存在并可以相互区分的事物叫实体。")]),_._v(" "),t("li",[t("strong",[_._v("实体型")]),_._v("：用 "),t("strong",[_._v("实体名")]),_._v(" 及其 "),t("strong",[_._v("属性名")]),_._v(" 集合来抽象和刻画同类实体称为实体型。")]),_._v(" "),t("li",[t("strong",[_._v("实体集")]),_._v("：同型实体的集合称为实体集。")]),_._v(" "),t("li",[t("strong",[_._v("联系")]),_._v("：现实世界中事物内部以及事物之间的联系在信息世界中反映为实体（型）内部的联系和实体（型）之间的联系。")])]),_._v(" "),t("h3",{attrs:{id:"数据模型的组成要素"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据模型的组成要素"}},[_._v("#")]),_._v(" 数据模型的组成要素")]),_._v(" "),t("p",[t("strong",[_._v("数据结构")]),_._v("：描述数据库的组成对象，以及对象之间的联系。")]),_._v(" "),t("p",[t("strong",[_._v("数据操作")]),_._v("：对数据库中各种对象（型）的实例（值）允许执行的 操作集合，包括操作及有关的操作规则。")]),_._v(" "),t("p",[t("strong",[_._v("数据的完整性约束")]),_._v("：一组完整性规则的集合。")]),_._v(" "),t("h3",{attrs:{id:"层次模型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#层次模型"}},[_._v("#")]),_._v(" 层次模型")]),_._v(" "),t("p",[t("strong",[_._v("定义")]),_._v("：满足下面两个条件的基本层次联系的集合为层次模型。")]),_._v(" "),t("ul",[t("li",[_._v("有且只有一个结点没有双亲结点，这个结点称为根结点；")]),_._v(" "),t("li",[_._v("根以外的其他结点有且只有一个双亲结点。")])]),_._v(" "),t("p",[t("strong",[_._v("层次数据库的优点主要有：")])]),_._v(" "),t("ul",[t("li",[_._v("层次模型的数据结构比较简单清晰；")]),_._v(" "),t("li",[_._v("层次数据库的查询效率高；")]),_._v(" "),t("li",[_._v("层次数据模型提供了良好的完整性支持。")])]),_._v(" "),t("p",[t("strong",[_._v("层次数据库的缺点主要是：")])]),_._v(" "),t("ul",[t("li",[_._v("现实世界中很多联系是非层次性的，层次模型不能自然地表示这类联系；")]),_._v(" "),t("li",[_._v("层次数据库中的查询必须按照层次结构从根结点开始，沿着路径进行，用户必须清楚数据库的层次结构。")])]),_._v(" "),t("h3",{attrs:{id:"网状模型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#网状模型"}},[_._v("#")]),_._v(" 网状模型")]),_._v(" "),t("p",[t("strong",[_._v("定义")]),_._v("：满足下面两个条件的基本层次联系的集合为网状模型。")]),_._v(" "),t("ul",[t("li",[_._v("允许一个以上的结点无双亲结点；")]),_._v(" "),t("li",[_._v("一个结点可以有多于一个的双亲结点。")])]),_._v(" "),t("p",[t("strong",[_._v("网状数据库的优点主要有：")])]),_._v(" "),t("ul",[t("li",[_._v("能够更为直接地描述现实世界，如一个结点可以有多个双亲。")]),_._v(" "),t("li",[_._v("具有良好的性能，存取效率较高。")])]),_._v(" "),t("p",[t("strong",[_._v("网状数据库的缺点主要是：")])]),_._v(" "),t("ul",[t("li",[_._v("结构比较复杂，而且随着应用环境的扩大，数据库的结构就变得越来越复杂，不利于最终用户掌握。")]),_._v(" "),t("li",[_._v("数据定义语言、数据操纵语言比较复杂，要求用户掌握数据库结构和存取路径，不容易使用。")])]),_._v(" "),t("h3",{attrs:{id:"关系模型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#关系模型"}},[_._v("#")]),_._v(" 关系模型")]),_._v(" "),t("p",[_._v("关系模型由 "),t("strong",[_._v("关系数据结构、关系操作集合和关系完整性约束")]),_._v(" 三部分组成。在用户观点下，关系模型中数据的逻辑结构是一张 "),t("strong",[_._v("二维表")]),_._v("，它由行和列组成。")]),_._v(" "),t("ul",[t("li",[t("strong",[_._v("关系")]),_._v("：一个关系对应通常说的一张表。")]),_._v(" "),t("li",[t("strong",[_._v("属性")]),_._v("：表中的一列即为一个属性；")]),_._v(" "),t("li",[t("strong",[_._v("域")]),_._v("：属性的取值范围；")]),_._v(" "),t("li",[t("strong",[_._v("元组")]),_._v("：表中的一行即为一个元组；")]),_._v(" "),t("li",[t("strong",[_._v("码")]),_._v("：表中的某个属性组，它可以唯一确定一个元组；")]),_._v(" "),t("li",[t("strong",[_._v("分量")]),_._v("：元组中的一个属性值；")]),_._v(" "),t("li",[t("strong",[_._v("关系模式")]),_._v("：对关系的描述，一般表示为：关系名 ( 属性1, 属性2, …, 属性n ) 。")])]),_._v(" "),t("div",{staticStyle:{color:"red"}},[t("p",[t("strong",[_._v("关系的完整性约束条件：实体完整性、参照完整性、用户定义的完整性。")])])]),t("p",[t("strong",[_._v("关系数据模型的优点：")])]),_._v(" "),t("ul",[t("li",[_._v("关系模型与非关系模型不同，它 "),t("strong",[_._v("具有严格的数学基础")]),_._v("。")]),_._v(" "),t("li",[_._v("关系模型的 "),t("strong",[_._v("概念单一")]),_._v("。所以其数据结构简单、清晰，用户易懂易用。")]),_._v(" "),t("li",[_._v("关系模型的 "),t("strong",[_._v("存取路径对用户透明")]),_._v("，从而具有更高的数据独立性、更好的安全保密性，简化了程序员的工作和数据库开发建立的工作。")])]),_._v(" "),t("p",[t("strong",[_._v("关系数据模型的缺点：")])]),_._v(" "),t("ul",[t("li",[_._v("由于存取路径对用户透明，"),t("strong",[_._v("查询效率往往不如非关系数据模型")]),_._v("。因此为了提高性能，必须对用户的查询请求进行优化，这就增加了开发关系数据库管理系统软件的难度。")])]),_._v(" "),t("h2",{attrs:{id:"_1-3-数据库系统的结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-数据库系统的结构"}},[_._v("#")]),_._v(" 1.3  数据库系统的结构")]),_._v(" "),t("p",[_._v("从数据库应用开发人员角度看，数据库系统通常采用 "),t("strong",[_._v("三级模式")]),_._v(" 结构，是数据库系统内部的系统结构。")]),_._v(" "),t("h3",{attrs:{id:"数据库系统模式的概念"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据库系统模式的概念"}},[_._v("#")]),_._v(" 数据库系统模式的概念")]),_._v(" "),t("div",{staticClass:"anchor",attrs:{id:"型---值"}},[_._v("型 & 值")]),t("p",[_._v("型（Type）：对某一类数据的结构和属性的说明。")]),_._v(" "),t("p",[_._v("值（Value）：是型的一个具体赋值。")]),_._v(" "),t("div",{staticClass:"anchor",attrs:{id:"模式---实例"}},[_._v("模式 & 实例")]),t("p",[_._v("模式（Schema）：数据库逻辑结构和特征的描述；是型的描述，不涉及具体值；反映的是数据的结构及其联系；模式是相对稳定的。")]),_._v(" "),t("p",[_._v("实例（Instance）：模式的一个具体值；反映数据库某一时刻的状态；同一个模式可以有很多实例\n；实例随数据库中的数据的更新而变动。")]),_._v(" "),t("h3",{attrs:{id:"三级模式与两级映像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三级模式与两级映像"}},[_._v("#")]),_._v(" 三级模式与两级映像")]),_._v(" "),t("p",[_._v("数据库系统的三级模式结构由 "),t("strong",[_._v("外模式、模式")]),_._v(" 和 "),t("strong",[_._v("内模式")]),_._v(" 组成。")]),_._v(" "),t("ul",[t("li",[_._v("外模式，亦称子模式或用户模式，是数据库用户能够看见和使用的 "),t("strong",[_._v("局部数据的逻辑结构和特征的描述")]),_._v("，是数据库用户的数据视图。")]),_._v(" "),t("li",[_._v("模式，亦称逻辑模式，是数据库中 "),t("strong",[_._v("全体数据的逻辑结构和特性的描述")]),_._v("，是所有用户的公共数据视图。模式描述的是数据的全局逻辑结构。外模式通常是模式的子集。")]),_._v(" "),t("li",[_._v("内模式，亦称存储模式，是数据在数据库系统内部的表示，即对 "),t("strong",[_._v("数据的物理结构和存储方式的描述")]),_._v("。")])]),_._v(" "),t("p",[_._v("数据库系统在这三级模式之间提供了两级映像："),t("strong",[_._v("外模式/模式映像")]),_._v(" 和 "),t("strong",[_._v("模式/内模式映像")]),_._v("。正是这两级映像保证了数据库系统中的数据能够具有较高的 "),t("strong",[_._v("逻辑独立性")]),_._v(" 和 "),t("strong",[_._v("物理独立性")]),_._v("。")]),_._v(" "),t("ul",[t("li",[_._v("物理独立性：当数库的 "),t("strong",[_._v("存储结构改变时")]),_._v("，由数据库管理员对 "),t("strong",[_._v("模式/内模式映像")]),_._v(" 作相应改变，可以使模式保持不变，从而应用程序也不必改变，这就是数据与程序的物理独立性。")]),_._v(" "),t("li",[_._v("逻辑独立性：当数据的 "),t("strong",[_._v("逻辑结构即模式改变时")]),_._v("，由数据库管理员对各个 "),t("strong",[_._v("外模式/模式映像")]),_._v(" 作相应改变，可以使外模式保持不变，从而应用程序不必修改，这就是数据与程序的逻辑独立性。")])]),_._v(" "),t("h2",{attrs:{id:"_1-4-数据库系统的组成"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-数据库系统的组成"}},[_._v("#")]),_._v(" 1.4  数据库系统的组成")]),_._v(" "),t("p",[t("strong",[_._v("数据库系统")]),_._v(" 是由 "),t("strong",[_._v("数据库 DB")]),_._v("、"),t("strong",[_._v("数据库管理系统 DBMS")]),_._v("、"),t("strong",[_._v("应用程序")]),_._v(" 和 "),t("strong",[_._v("数据库管理员 DBA")]),_._v(" 组成的存储、管理、处理和维护数据的系统。")])])}),[],!1,null,null,null);v.default=r.exports}}]);