(window.webpackJsonp=window.webpackJsonp||[]).push([[157],{1091:function(s,t,a){"use strict";a.r(t);var r=a(14),e=Object(r.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"第-6-章-redis事务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第-6-章-redis事务"}},[s._v("#")]),s._v(" 第 6 章 Redis事务")]),s._v(" "),a("p",[s._v("Redis 事务的本质是一组命令的集合。事务支持一次执行多个命令，一个事务中所有命令都会被序列化。在事务执行过程，会按照顺序串行化执行队列中的命令，其他客户端提交的命令请求不会插入到事务执行命令序列中。")]),s._v(" "),a("p",[s._v("Redis 事务就是一次性、顺序性、排他性地执行一个队列中的一系列命令")]),s._v(" "),a("h2",{attrs:{id:"_6-1-redis-事务相关命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-redis-事务相关命令"}},[s._v("#")]),s._v(" 6.1 Redis 事务相关命令")]),s._v(" "),a("p",[s._v("MULTI 、 EXEC 、 DISCARD 和 WATCH 是 Redis 事务相关的命令。")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("命令")]),s._v(" "),a("th",[s._v("描述")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("MULTI")]),s._v(" "),a("td",[s._v("开启事务，Redis 会将后续的命令逐个放入队列中，然后使用 EXEC 命令来原子化执行这个命令系列。")])]),s._v(" "),a("tr",[a("td",[s._v("EXEC")]),s._v(" "),a("td",[s._v("执行事务中的所有操作命令。")])]),s._v(" "),a("tr",[a("td",[s._v("DISCARD")]),s._v(" "),a("td",[s._v("取消事务，放弃执行事务块中的所有命令。")])]),s._v(" "),a("tr",[a("td",[s._v("WATCH")]),s._v(" "),a("td",[s._v("监视一个或多个 key，如果事务在执行前，这个 key（或多个 key）被其他命令修改，则事务被中断，不会执行事务中的任何命令。")])]),s._v(" "),a("tr",[a("td",[s._v("UNWATCH")]),s._v(" "),a("td",[s._v("取消 WATCH 对所有 key 的监视。")])])])]),s._v(" "),a("h3",{attrs:{id:"事务执行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事务执行"}},[s._v("#")]),s._v(" 事务执行")]),s._v(" "),a("p",[s._v("给 k1、k2 分别赋值，在事务中修改 k1、k2，执行事务后，查看 k1、k2 值都被修改。")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" MULTI\nOK\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" SET k1 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\nQUEUED\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" SET k2 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\nQUEUED\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" EXEC\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" OK\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" OK\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" GET k1\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" GET k2\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2"')]),s._v("\n")])])]),a("h3",{attrs:{id:"事务取消"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事务取消"}},[s._v("#")]),s._v(" 事务取消")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" MULTI\nOK\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" SET k1 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\nQUEUED\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" SET k2 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("\nQUEUED\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" DISCARD\nOK\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" GET k1\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" GET k2\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2"')]),s._v("\n")])])]),a("h3",{attrs:{id:"错误处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#错误处理"}},[s._v("#")]),s._v(" 错误处理")]),s._v(" "),a("div",{staticClass:"subtitle"},[a("p",[s._v("编译时错误")])]),a("p",[s._v("开启事务后，修改 k1、k2 的值，但 k2 语法错误，最终导致事务提交失败，k1、k2 保留原值。")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" MULTI\nOK\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" SET k1 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\nQUEUED\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" SETS k2 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("error"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" ERR unknown "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("command")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("SETS"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v(", with args beginning with: "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("k2"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v(", "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v(",\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" EXEC\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("error"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" EXECABORT Transaction discarded because of previous errors.\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" GET k1\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1"')]),s._v("\n")])])]),a("div",{staticClass:"subtitle"},[a("p",[s._v("运行时错误")])]),a("p",[s._v("开启事务后，修改 k1、k2 的值，但将 k2 的类型作为 List，在运行时检测类型错误，最终导致事务提交失败，此时事务并没有回滚，而是跳过错误命令继续执行，结果 k1 值改变、k2 保留原值。")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" MULTI\nOK\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" SET k1 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\nQUEUED\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" LPUSH k2 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("\nQUEUED\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" EXEC\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" OK\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("error"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" WRONGTYPE Operation against a key holding the wrong kind of value\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" GET k1\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"3"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" GET k2\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2"')]),s._v("\n")])])]),a("h3",{attrs:{id:"watch-实现乐观锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#watch-实现乐观锁"}},[s._v("#")]),s._v(" WATCH 实现乐观锁")]),s._v(" "),a("p",[s._v("WATCH 命令可以为 Redis 事务提供 CAS 行为。")]),s._v(" "),a("p",[s._v("被 WATCH 的键会被监视，并会发觉这些键是否被改动过了。如果有至少一个被监视的键在 EXEC 执行之前被修改了，那么整个事务都会被取消，EXEC 返回 nil-reply 来表示事务已经失败。")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" WATCH k1\nOK\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" SET k1 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\nOK\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" MULTI\nOK\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" SET k1 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("\nQUEUED\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" EXEC\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nil"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" GET k1\n")])])]),a("p",[s._v("当使用 EXEC 执行事务时，首先会比对 WATCH 所监控的键值对，如果没发生改变，它会执行事务队列中的命令，提交事务；如果发生变化，将不会执行事务中的任何命令，同时事务回滚。当然无论是否回滚，Redis 都会取消执行事务前的 WATCH 命令。")]),s._v(" "),a("p",[s._v("程序需要做的，就是不断重试这个操作，直到没有发生碰撞为止。这种形式的锁被称作乐观锁，它是一种非常强大的锁机制。并且因为大多数情况下，不同的客户端会访问不同的键，碰撞的情况一般都很少，因此通常并不需要进行重试。")]),s._v(" "),a("h2",{attrs:{id:"_6-2-事务执行步骤"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-事务执行步骤"}},[s._v("#")]),s._v(" 6. 2 事务执行步骤")]),s._v(" "),a("p",[s._v("通过上文命令执行，显然 Redis 事务执行是三个阶段：")]),s._v(" "),a("ul",[a("li",[s._v("开启：以 MULTI 开始一个事务")]),s._v(" "),a("li",[s._v("入队：将多个命令入队到事务中，接到这些命令并不会立即执行，而是放到等待执行的事务队列里面")]),s._v(" "),a("li",[s._v("执行：由 EXEC 命令触发事务")])]),s._v(" "),a("p",[s._v("当一个客户端切换到事务状态之后， 服务器会根据这个客户端发来的不同命令执行不同的操作：")]),s._v(" "),a("ul",[a("li",[s._v("如果客户端发送的命令为 EXEC、DISCARD、WATCH、MULTI 四个命令中的一个，那么服务器立即执行这个命令。")]),s._v(" "),a("li",[s._v("与此相反，如果客户端发送的命令是四个命令以外的其他命令，那么服务器并不立即执行这个命令，而是将这个命令放入一个事务队列里面，然后向客户端返回 QUEUED 回复。")])])])}),[],!1,null,null,null);t.default=e.exports}}]);